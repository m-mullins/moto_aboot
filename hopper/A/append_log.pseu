    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r6 = arg0;
    r5 = arg1;
    r4 = *arg0;
    r3 = *0x8f7112f4;
    r7 = *(r4 + 0x24);
    stack[2040] = r3;
    if (arg1 + r7 >= 0x200000) {
            r0 = loc_ffffffff8f64ac90();
            r0 = *r0;
            loc_ffffffff8f64ac90(r0 + 0x200, r6 + (0x200000 - r7), r5 - 0x200000 - r7);
            r3 = *(r4 + 0x1c);
            *(r4 + 0x24) = (r5 - 0x200000 - r7) + 0x200;
            *(r4 + 0x1c) = r3 + r5;
    }
    else {
            loc_ffffffff8f64ac90();
            *(r4 + 0x1c) = *(r4 + 0x1c) + r5;
            r3 = *(r4 + 0x24);
            r5 = r5 + r3;
            if (r5 != 0x200000) {
                    *(r4 + 0x24) = r5;
            }
            if (CPU_FLAGS & E) {
                    r3 = 0x200;
            }
            if (CPU_FLAGS & E) {
                    *(r4 + 0x24) = r3;
            }
    }
    *(r4 + 0x30) = 0x0;
    r0 = loc_ffffffff8f657598(r4);
    r3 = *0x8f7112f4;
    *(r4 + 0x30) = r0;
    if (stack[2040] != r3) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

