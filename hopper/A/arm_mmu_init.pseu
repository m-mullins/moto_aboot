    stack[2046] = r5;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = 0x8f7112f4;
    r3 = *r4;
    r5 = r4;
    stack[2043] = r3;
    r0 = loc_ffffffff8f6194cc(arg0, arg1, arg2, r3, arg0, stack[2043], arg2, 0x8f7112f4, stack[2046], lr);
    loc_ffffffff8f6194d4(r0 & !0x30000001);
    r0 = loc_ffffffff8f601b50();
    if (r0 != 0x0) {
            r4 = 0x0;
    }
    if (CPU_FLAGS & NE) {
            do {
                    r0 = r0 << r4 * 0x100000;
                    r4 = r4 + 0x1;
                    r0 = loc_ffffffff8f61996c(r0, r0, 0xc00);
            } while (r4 != 0x1000);
    }
    loc_ffffffff8f601b84();
    loc_ffffffff8f6194f0(0x8f6bc000);
    loc_ffffffff8f6194f8(0x1);
    r0 = loc_ffffffff8f6194cc();
    if (stack[2043] != *r5) {
            r0 = loc_ffffffff8f648514();
    }
    else {
            r0 = r0 | 0x1;
            asm{ mcr        p15, #0x0, r0, c1, c0, #0x0 };
            asm{ isb        sy };
    }
    return r0;

