    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r7 = arg3;
    r4 = arg0;
    r6 = arg2;
    stack[2040] = *arg0;
    r3 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r3 + 0x1;
    if (r3 == 0x0) {
            loc_ffffffff8f619448();
    }
    if (loc_ffffffff8f677d10(r4) == 0x0) {
            r3 = *0x8f6ac0f0;
            *0x8f6ac0f0 = r3 - 0x1;
            if (r3 == 0x1) {
                    loc_ffffffff8f619438();
            }
            r0 = 0x0 ^ 0xffffffff;
    }
    else {
            r8 = 0x8f6ac0f0;
            asm{ ldrd       r4, r5, [r0, #0x30] };
            r4 = r4 + r6;
            asm{ strd       r4, r5, [r0, #0x30] };
            r4 = *r8;
            *r8 = r4 - 0x1;
            if (r4 == 0x1) {
                    loc_ffffffff8f619438();
            }
            r0 = 0x0;
    }
    if (stack[2040] != *r0) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

