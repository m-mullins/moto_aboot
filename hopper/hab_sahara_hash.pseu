    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0xa0;
    stack[2041] = *0x8f7112f4;
    r3 = *r0;
    if (r2 == 0x0) {
            r0 = 0x39;
    }
    else {
            r6 = 0x0 - r1 - 0x62;
            r6 = r6 + (r1 - 0x62) + CARRY(FLAGS);
            if (r1 != 0x62) {
                    CMP(r1, 0x41);
            }
            if (!CPU_FLAGS & NE) {
                    COND = r12 == 0x0;
                    lr = sp + 0x24;
                    if (!COND) {
                            r0 = r0 + 0x1;
                            r1 = lr;
                            r3 = 0x0;
                            do {
                                    r7 = *(r0 + 0x1);
                                    r5 = *r0;
                                    r0 = r0 + 0x8;
                                    r8 = *(r0 + 0xfffffffffffffffc);
                                    r12 = zero_extend_32(r12 - 0x1);
                                    COND = r12 == 0x0;
                                    r7 = r7 << r7 * 0x10000 | r5 * 0x1000000 | *(r0 + 0xfffffffffffffffb);
                                    r7 = r7 | *(r0 + 0xfffffffffffffffa) * 0x100;
                                    r5 = *(r0 + 0xfffffffffffffffd);
                                    r5 = r5 << r5 * 0x10000 | r8 * 0x1000000 | *(r0 + 0xffffffffffffffff);
                                    r5 = r5 | *(r0 + 0xfffffffffffffffe) * 0x100;
                                    asm{ stm        r1, {r5, r7} };
                                    r3 = r3 + r5;
                                    r5 = r1 + 0xc;
                                    if (COND) {
                                            r7 = r12;
                                    }
                                    if (CPU_FLAGS & NE) {
                                            r7 = r5;
                                    }
                                    *(r1 + 0x8) = r7;
                                    r1 = r5;
                            } while (CPU_FLAGS & NE);
                    }
                    r1 = 0x208d0024;
                    if (r6 != 0x0) {
                            r1 = 0x20;
                    }
                    if (CPU_FLAGS & E) {
                            r1 = 0x14;
                    }
                    stack[2008] = r1;
                    if (r3 != 0x0) {
                            r3 = sp + 0x0;
                    }
                    if (CPU_FLAGS & E) {
                            r3 = 0xa18d0024;
                    }
                    r1 = stack[2008];
                    r0 = loc_ffffffff8f606af0();
                    r5 = r0;
                    if (r0 == 0xf0) {
                            loc_ffffffff8f6069d8();
                            r0 = r5;
                    }
                    else {
                            r0 = 0x39;
                    }
            }
            else {
                    r0 = 0x39;
            }
    }
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

