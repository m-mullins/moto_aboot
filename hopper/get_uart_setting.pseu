    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x14;
    r5 = arg0;
    r3 = *0x8f7112f4;
    stack[2041] = r3;
    r0 = loc_ffffffff8f63084c("uart_setting", arg1, arg2, r3, stack[2038]);
    stack[2039] = 0x0 ^ 0xffffffff;
    stack[2040] = 0x0 ^ 0xffffffff;
    r6 = r0;
    if ((CPU_FLAGS & E) || (r6 < 0x0)) goto loc_8f632b20;

loc_8f632b28:
    if (loc_ffffffff8f6309d0("uart_dm_base", r6, sp + 0x4) != -0x1) goto loc_8f632b48;

loc_8f632b40:
    r0 = 0x0 ^ 0xffffffff;
    goto loc_8f632bec;

loc_8f632bec:
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f632b48:
    loc_ffffffff8f656968(0x2, "get prop %s: 0x%x\n", "uart_dm_base", stack[2039]);
    if (loc_ffffffff8f6309d0("uart_dm_id", r6, sp + 0x8) == -0x1) goto loc_8f632b40;

loc_8f632b74:
    loc_ffffffff8f656968(0x2, "get prop %s: 0x%x\n", "uart_dm_id", stack[2040]);
    if (CPU_FLAGS & L) goto loc_8f632bb4;

loc_8f632b9c:
    r3 = stack[2040];
    if (r3 >= 0x0) goto loc_8f632bbc;

loc_8f632bb4:
    loc_ffffffff8f656968();
    goto loc_8f632b40;

loc_8f632bbc:
    loc_ffffffff8f656968(0x2, "Uart DM base defined: %d\n");
    loc_ffffffff8f656968(0x2, "Uart DM ID defined: %d\n", stack[2040]);
    r0 = 0x0;
    *r5 = stack[2039];
    *(r5 + 0x4) = stack[2040];
    goto loc_8f632bec;

loc_8f632b20:
    loc_ffffffff8f656968();
    goto loc_8f632b40;

