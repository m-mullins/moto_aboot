    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x10c;
    r6 = 0x0;
    r4 = arg0 + 0x10;
    r7 = arg0;
    s0 = arg1;
    r5 = r6;
    stack[2037] = *0x8f7112f4;
    r3 = sp + 0x4;
    COND = r2 != 0x0;
    if (COND) {
            r2 = 0x8 - r2;
    }
    r10 = r2 + r3;
    goto loc_8f60f7e4;

loc_8f60f7e4:
    if (r6 >= s0) goto loc_8f60f860;

loc_8f60f7ec:
    if (*(r7 + 0xc) == 0x0) goto loc_8f60f80c;

loc_8f60f7f8:
    r0 = loc_ffffffff8f60f600();
    COND = r5 != 0x0;
    if (COND) goto loc_8f60f860;

loc_8f60f804:
    loc_ffffffff8f60c558(0x4);
    goto loc_8f60f80c;

loc_8f60f80c:
    loc_ffffffff8f64ac90(r10, *(r4 + 0xfffffffffffffff4), *(r4 + 0xfffffffffffffff0));
    *(0x1a98000 + 0x48) = r10;
    *(0x1a98000 + 0x4c) = *(r4 + 0xfffffffffffffff0);
    asm{ dsb        sy };
    r5 = r5 + loc_ffffffff8f60f538();
    asm{ dsb        sy };
    if (*(r4 + 0xfffffffffffffff8) != 0x0) {
            loc_ffffffff8f60c558();
    }
    else {
            loc_ffffffff8f60c5a0(0x50);
    }
    r6 = r6 + 0x1;
    r4 = r4 + 0x10;
    goto loc_8f60f7e4;

loc_8f60f860:
    r0 = r5;
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

