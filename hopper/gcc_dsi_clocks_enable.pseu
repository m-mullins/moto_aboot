    r5 = arg3;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x14;
    r6 = arg2;
    s0 = arg0;
    r7 = arg1;
    r4 = lr;
    stack[2039] = *0x8f7112f4;
    *(0x184d000 + 0x48) = 0x100;
    *(0x184d000 + 0x44) = 0x1;
    *(0x184d000 + 0x94) = 0x1;
    *(0x184d000 + 0x4) = 0x100;
    *0x184d000 = 0x1;
    *(0x184d000 + 0x84) = 0x1;
    *(0x184d000 + 0x8) = arg1;
    *(0x184d000 + 0xc) = r6;
    *(0x184d000 + 0x10) = r5;
    r0 = loc_ffffffff8f60cdc4("mdss_esc0_clk", 0x0, 0x1, 0x100, stack[2036]);
    COND = r2 == 0x0;
    if (!COND) {
            loc_ffffffff8f656968(0x0 ^ 0xffffffff, "failed to set esc0_clk ret = %d\n");
            r0 = loc_ffffffff8f6484ac(r4, "ASSERT FAILED at (%s:%d): %s\n", "platform/msm8916/acpuclock.c", 0x12e, 0x8f69c66f);
    }
    if (s0 != 0x0) {
            *(0x184d000 + 0xb4) = 0x100;
            *(0x184d000 + 0xb0) = 0x1;
            *(0x184d000 + 0xa0) = 0x1;
            *(0x184d000 + 0xbc) = 0x100;
            *(0x184d000 + 0xb8) = 0x1;
            *(0x184d000 + 0xa4) = 0x1;
            *(0x184d000 + 0xc0) = r7;
            *(0x184d000 + 0xc4) = r6;
            *(0x184d000 + 0xc8) = r5;
            r0 = loc_ffffffff8f60cdc4("mdss_esc1_clk", 0x0, 0x1, 0x100);
            COND = r2 == 0x0;
            if (!COND) {
                    loc_ffffffff8f656968(0x0 ^ 0xffffffff, "failed to set esc1_clk ret = %d\n");
                    r0 = loc_ffffffff8f6484ac(r4, "ASSERT FAILED at (%s:%d): %s\n", "platform/msm8916/acpuclock.c", 0x145, 0x8f69c66f);
            }
    }
    if (stack[2039] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

