    stack[2041] = r4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = *arg0;
    r3 = *0x8f7112f4;
    stack[2040] = r3;
    loc_ffffffff8f656968(0x2, "start handling boot command...\n", arg2, r3, arg0, arg1, arg2, stack[2040], stack[2041], r5, r6, r7, 0x8f7112f4, r10, lr);
    loc_ffffffff8f646e70();
    if (loc_ffffffff8f64af40(r4, "ANDROID!", 0x8) == 0x0) goto loc_8f621e28;

loc_8f621e08:
    loc_ffffffff8f656968(0x0, "%s: Invalid boot image header\n", "handle_fboot_command_boot");
    loc_ffffffff8f62192c(0x8f683451, "Invalid boot image header");
    goto loc_8f6221d8;

loc_8f6221d8:
    r0 = 0x3;
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f621e28:
    r5 = *(r4 + 0x24);
    if (r5 == 0x0) {
            r5 = 0x800;
    }
    r7 = r4 + r5;
    loc_ffffffff8f656968();
    r10 = 0x0 - r5;
    r2 = *(r7 + 0x38) - 0x644d5241;
    r1 = 0x0 - r2;
    loc_ffffffff8f61ee5c(r4, r1 + r2 + CARRY(FLAGS), r2, 0x644d5241);
    r2 = *(r4 + 0x8);
    r3 = *(r4 + 0xc);
    *(r4 + 0x8) = r10 & (r2 - 0x1) + r5;
    loc_ffffffff8f656968(0x1, "copy kernel data (size=0x%x) to 0x%x\n", r10 & (r2 - 0x1) + r5, r3);
    r0 = *(r4 + 0xc);
    loc_ffffffff8f64ac90(r0, r7, *(r4 + 0x8));
    r6 = *(r4 + 0x10);
    if (r6 == 0x0) goto loc_8f621f2c;

loc_8f621eac:
    r0 = *(r4 + 0x14);
    r3 = *(r4 + 0xc);
    s0 = *(r4 + 0x8);
    r6 = (r6 - 0x1) + r5 & r10;
    if ((r0 >= r3) || (r6 + r0 <= r3)) goto loc_8f621ed8;

loc_8f622184:
    loc_ffffffff8f656968();
    goto loc_8f6221d8;

loc_8f621ed8:
    r3 = *(r4 + 0x20);
    if ((r0 >= r3) || (r6 + r0 < r3)) goto loc_8f621efc;
    goto loc_8f622184;

loc_8f621efc:
    s0 = r6 + r7 + s0;
    loc_ffffffff8f64ac90();
    *(r4 + 0x10) = r6;
    loc_ffffffff8f656968(0x1, "ramdisk copied to 0x%x, size is 0x%x\n", *(r4 + 0x14), r6);
    goto loc_8f621f30;

loc_8f621f30:
    r0 = loc_ffffffff8f6203fc(r4, s0);
    COND = r6 != 0x0;
    if (!COND) {
            loc_ffffffff8f656968(0x1, "Device tree not found from downloaded boot image\n");
    }
    *(r4 + 0x23f) = 0x0;
    if (((r6 != 0x0) && (*(r4 + 0x10) != 0x0)) && (loc_ffffffff8f64b354(r4 + 0x40) != 0x0)) {
            loc_ffffffff8f656968(0x1, "got everything for booting\n");
            loc_ffffffff8f634164();
            loc_ffffffff8f639d98(0x0);
            (*(0x8f6ac374 + 0x4))("logo_screen", 0x1);
            loc_ffffffff8f621534(0x8f6833d5, "booting kernel...");
            loc_ffffffff8f60c558(0x64);
            loc_ffffffff8f6061e4();
            loc_ffffffff8f646d0c();
            loc_ffffffff8f674e58();
            r0 = loc_ffffffff8f673d70();
            COND = r5 == 0x0;
            if (!COND) {
                    loc_ffffffff8f656968();
            }
            else {
                    loc_ffffffff8f656968(0x2, "start booting kernel...\n");
                    loc_ffffffff8f61e450(r5);
                    r6 = *(r4 + 0xc);
                    r5 = *(r4 + 0x20);
                    r0 = loc_ffffffff8f60088c();
                    loc_ffffffff8f62067c(r6, r5, r4 + 0x40, r0, *(r4 + 0x14), *(r4 + 0x10));
                    loc_ffffffff8f61e450(0x6);
            }
    }
    else {
            r2 = 0x0;
            r3 = 0x0;
            r0 = 0x8f68503b;
            r1 = 0x92000000;
            asm{ strd       r2, r3, [sp, #0x2c + var_2C] };
            if (loc_ffffffff8f67b018(r0, r1, r2, r3) == -0x1) {
                    loc_ffffffff8f656968();
                    if (r6 == 0x0) {
                            loc_ffffffff8f656968();
                    }
                    else {
                            if (*(r4 + 0x10) == 0x0) {
                                    loc_ffffffff8f656968();
                            }
                            else {
                                    loc_ffffffff8f634164();
                                    loc_ffffffff8f639d98(0x0);
                                    (*(0x8f6ac374 + 0x4))("logo_screen", 0x1);
                                    loc_ffffffff8f621534(0x8f6833d5, "booting kernel...");
                                    loc_ffffffff8f60c558(0x64);
                                    loc_ffffffff8f6061e4();
                                    loc_ffffffff8f646d0c();
                                    loc_ffffffff8f674e58();
                                    r0 = loc_ffffffff8f673d70();
                                    COND = r5 == 0x0;
                                    if (!COND) {
                                            loc_ffffffff8f656968();
                                    }
                                    else {
                                            loc_ffffffff8f656968(0x2, "start booting kernel...\n");
                                            loc_ffffffff8f61e450(r5);
                                            r6 = *(r4 + 0xc);
                                            r5 = *(r4 + 0x20);
                                            r0 = loc_ffffffff8f60088c();
                                            loc_ffffffff8f62067c(r6, r5, r4 + 0x40, r0, *(r4 + 0x14), *(r4 + 0x10));
                                            loc_ffffffff8f61e450(0x6);
                                    }
                            }
                    }
            }
            else {
                    r0 = loc_ffffffff8f64af40(0x92000000, "ANDROID!", 0x8);
                    COND = r2 != 0x0;
                    if (!CPU_FLAGS & E) {
                            loc_ffffffff8f656968();
                            if (r6 == 0x0) {
                                    loc_ffffffff8f656968();
                            }
                            else {
                                    if (*(r4 + 0x10) == 0x0) {
                                            loc_ffffffff8f656968();
                                    }
                                    else {
                                            loc_ffffffff8f634164();
                                            loc_ffffffff8f639d98(0x0);
                                            (*(0x8f6ac374 + 0x4))("logo_screen", 0x1);
                                            loc_ffffffff8f621534(0x8f6833d5, "booting kernel...");
                                            loc_ffffffff8f60c558(0x64);
                                            loc_ffffffff8f6061e4();
                                            loc_ffffffff8f646d0c();
                                            loc_ffffffff8f674e58();
                                            r0 = loc_ffffffff8f673d70();
                                            COND = r5 == 0x0;
                                            if (!COND) {
                                                    loc_ffffffff8f656968();
                                            }
                                            else {
                                                    loc_ffffffff8f656968(0x2, "start booting kernel...\n");
                                                    loc_ffffffff8f61e450(r5);
                                                    r6 = *(r4 + 0xc);
                                                    r5 = *(r4 + 0x20);
                                                    r0 = loc_ffffffff8f60088c();
                                                    loc_ffffffff8f62067c(r6, r5, r4 + 0x40, r0, *(r4 + 0x14), *(r4 + 0x10));
                                                    loc_ffffffff8f61e450(0x6);
                                            }
                                    }
                            }
                    }
                    else {
                            r3 = *(0x92000000 + 0x24);
                            *(0x92000000 + 0x23f) = r2;
                            r1 = *(r7 + 0x38);
                            r7 = r4 + 0x40;
                            if (r3 != 0x0) {
                                    r5 = r3;
                            }
                            r3 = r1 - 0x644d5241;
                            r1 = 0x0 - r3;
                            loc_ffffffff8f61ee5c();
                            if (loc_ffffffff8f64b354(r7) != 0x0) {
                                    loc_ffffffff8f656968();
                            }
                            else {
                                    loc_ffffffff8f656968();
                                    loc_ffffffff8f64b21c(r7, 0x92000040, 0x200);
                            }
                            if (*(r4 + 0x10) == 0x0) {
                                    r7 = *(0x92000000 + 0x10);
                                    r1 = *(0x92000000 + 0x8);
                                    r0 = *(r4 + 0x14);
                                    loc_ffffffff8f64ac90(r0, (r1 + 0x92000000 - 0x1) + r5 * 0x2 & 0x0 - r5, (r7 - 0x1) + r5 & 0x0 - r5, 0x0 - r5);
                                    *(r4 + 0x10) = (r7 - 0x1) + r5 & 0x0 - r5;
                                    loc_ffffffff8f656968(0x1, "load ramdisk from emmc(size=0x%x) to 0x%x\n", (r7 - 0x1) + r5 & 0x0 - r5, *(r4 + 0x14));
                            }
                            if (r6 == 0x0) {
                                    loc_ffffffff8f656968(0x1, "try to use device tree from existing boot image...\n");
                                    r1 = *(0x92000000 + 0x8);
                                    r1 = (0x0 - r5 & (r1 - 0x1) + r5) + ((*(0x92000000 + 0x10) - 0x1) + r5 & 0x0 - r5);
                                    r2 = *(0x92000000 + 0x18);
                                    if (!CPU_FLAGS & E) {
                                            loc_ffffffff8f634164();
                                            loc_ffffffff8f639d98(0x0);
                                            (*(0x8f6ac374 + 0x4))("logo_screen", 0x1);
                                            loc_ffffffff8f621534(0x8f6833d5, "booting kernel...");
                                            loc_ffffffff8f60c558(0x64);
                                            loc_ffffffff8f6061e4();
                                            loc_ffffffff8f646d0c();
                                            loc_ffffffff8f674e58();
                                            r0 = loc_ffffffff8f673d70();
                                            COND = r5 == 0x0;
                                            if (!COND) {
                                                    loc_ffffffff8f656968();
                                            }
                                            else {
                                                    loc_ffffffff8f656968(0x2, "start booting kernel...\n");
                                                    loc_ffffffff8f61e450(r5);
                                                    r6 = *(r4 + 0xc);
                                                    r5 = *(r4 + 0x20);
                                                    r0 = loc_ffffffff8f60088c();
                                                    loc_ffffffff8f62067c(r6, r5, r4 + 0x40, r0, *(r4 + 0x14), *(r4 + 0x10));
                                                    loc_ffffffff8f61e450(0x6);
                                            }
                                    }
                                    else {
                                            loc_ffffffff8f656968();
                                    }
                            }
                            else {
                                    loc_ffffffff8f634164();
                                    loc_ffffffff8f639d98(0x0);
                                    (*(0x8f6ac374 + 0x4))("logo_screen", 0x1);
                                    loc_ffffffff8f621534(0x8f6833d5, "booting kernel...");
                                    loc_ffffffff8f60c558(0x64);
                                    loc_ffffffff8f6061e4();
                                    loc_ffffffff8f646d0c();
                                    loc_ffffffff8f674e58();
                                    r0 = loc_ffffffff8f673d70();
                                    COND = r5 == 0x0;
                                    if (!COND) {
                                            loc_ffffffff8f656968();
                                    }
                                    else {
                                            loc_ffffffff8f656968(0x2, "start booting kernel...\n");
                                            loc_ffffffff8f61e450(r5);
                                            r6 = *(r4 + 0xc);
                                            r5 = *(r4 + 0x20);
                                            r0 = loc_ffffffff8f60088c();
                                            loc_ffffffff8f62067c(r6, r5, r4 + 0x40, r0, *(r4 + 0x14), *(r4 + 0x10));
                                            loc_ffffffff8f61e450(0x6);
                                    }
                            }
                    }
            }
    }
    goto loc_8f6221d8;

loc_8f621f2c:
    s0 = r7;
    goto loc_8f621f30;

