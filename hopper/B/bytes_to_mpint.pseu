    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    stack[2043] = *0x8f7112f4;
    r12 = r2 + 0x3;
    if (r2 < 0x0) {
            r2 = r12;
    }
    r12 = 0x0;
    r2 = SAR(r2, r2 / 0x4);
    r4 = r12;
    r0 = r0 + r2 * 0x4;
    while (r4 < r2) {
            r3 = 0x0;
            do {
                    r6 = *(r1 + r3);
                    r3 = r3 + 0x1;
                    r12 = (r12 | r6) << (r12 | r6) * 0x100;
            } while (r3 != 0x3);
            r3 = *(r1 + 0x3);
            r4 = r4 + 0x1;
            r1 = r1 + 0x4;
            r0 = r0 + 0xfffffffffffffffc;
            *r0 = r12 | r3;
    }
    if (stack[2043] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

