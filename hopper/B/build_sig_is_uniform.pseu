    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    stack[2040] = *0x8f7112f4;
    if (*0x8f6e12e0 != 0x0) goto loc_8f651a70;

loc_8f651980:
    r4 = *0x8f6e12e0;
    loc_ffffffff8f6516d0(0x8f6809a6, 0x8f651560, r4);
    loc_ffffffff8f6516d0(0x8f6809ab, 0x8f651560, r4);
    loc_ffffffff8f6516d0(0x8f6809af, 0x8f651560, r4);
    loc_ffffffff8f6516d0(0x8f6809b2, 0x8f651560, r4);
    loc_ffffffff8f6516d0("aboot", 0x8f651560, r4);
    if (*0x8f6e12dc != 0x5) {
            *0x8f6afe1c = *0x8f6e12e0;
    }
    if (*0x8f6afe1c == 0x0) goto loc_8f651a28;

loc_8f6519ec:
    r2 = 0x8f6e1228;
    r3 = 0x0;
    goto loc_8f6519f4;

loc_8f6519f4:
    if (r3 == *0x8f6e12dc) goto loc_8f651a28;

loc_8f6519fc:
    if (*(r2 + 0xffffffffffffffd8) != 0x0) goto loc_8f651a14;

loc_8f651a08:
    *0x8f6afe1c = 0x0;
    goto loc_8f651a28;

loc_8f651a28:
    r3 = *0x8f6afe1c;
    if (r3 != 0x0) {
            r4 = 0x1;
            do {
                    if (r4 >= *0x8f6e12dc) {
                        break;
                    }
                    if (loc_ffffffff8f64b0ac(0x8f6e1200 + 0x2c * r4, 0x8f6e1200) != 0x0) {
                            r3 = 0x0;
                    }
                    if (CPU_FLAGS & NE) {
                            *0x8f6afe1c = r3;
                    }
                    if (CPU_FLAGS & E) {
                            r4 = r4 + 0x1;
                    }
            } while (CPU_FLAGS & E);
    }
    *0x8f6e12e0 = 0x1;
    goto loc_8f651a70;

loc_8f651a70:
    r3 = *0x8f7112f4;
    r0 = *0x8f6afe1c;
    if (stack[2040] != r3) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f651a14:
    r1 = *r2;
    r2 = r2 + 0x2c;
    if (r1 != 0x0) goto loc_8f651a08;

loc_8f651a20:
    r3 = r3 + 0x1;
    goto loc_8f6519f4;

