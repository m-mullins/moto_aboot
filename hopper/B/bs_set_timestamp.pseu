    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x14;
    r7 = lr;
    r4 = arg0;
    r3 = *0x8f7112f4;
    stack[2041] = r3;
    r0 = loc_ffffffff8f601b18(arg0);
    COND = r5 == 0x0;
    if (!COND) {
            if (r4 >= 0x5) {
                    loc_ffffffff8f656968(0x0 ^ 0xffffffff, "bad bs id: %u, max: %u\n", r4, 0x6);
                    loc_ffffffff8f6484ac(r7, "ASSERT FAILED at (%s:%d): %s\n", "platform/msm_shared/boot_stats.c", 0x2e, 0x8f69c66f);
                    r0 = loc_ffffffff8f601adc();
                    if (r0 != 0x0) {
                            *(r5 + r4 * 0x4) = r0;
                    }
            }
            else {
                    if (r4 == 0x4) {
                            *0x8f6b7950 = loc_ffffffff8f601adc();
                    }
                    else {
                            if (r4 == 0x5) {
                                    r0 = loc_ffffffff8f601adc();
                                    if (r0 != 0x0) {
                                            r3 = 0x8f6b7950;
                                    }
                                    if (CPU_FLAGS & NE) {
                                            r3 = *r3;
                                    }
                                    if (CPU_FLAGS & NE) {
                                            r0 = r0 - r3;
                                    }
                                    if (CPU_FLAGS & NE) {
                                            *(r5 + 0xc) = r0;
                                    }
                            }
                            else {
                                    r0 = loc_ffffffff8f601adc();
                                    if (r0 != 0x0) {
                                            *(r5 + r4 * 0x4) = r0;
                                    }
                            }
                    }
            }
    }
    if (stack[2041] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

