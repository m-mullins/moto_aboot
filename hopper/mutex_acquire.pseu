    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = r0;
    r1 = *(r0 + 0x8);
    stack[2041] = *0x8f7112f4;
    r2 = *0x8f7114ac;
    if (r2 == r1) {
            loc_ffffffff8f6484ac(lr, "mutex_acquire: thread %p (%s) tried to acquire mutex %p it already owns.\n");
    }
    r2 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r2 + 0x1;
    if (r2 == 0x0) {
            loc_ffffffff8f619448();
    }
    r3 = *(r4 + 0x4);
    *(r4 + 0x4) = r3 + 0x1;
    if (r3 <= 0x0) {
            r6 = 0x0;
    }
    if (!CPU_FLAGS & LE) {
            r0 = loc_ffffffff8f61bc38(r4 + 0xc, 0x0 ^ 0xffffffff);
            COND = r6 < 0x0;
            if (!COND) {
                    *(r4 + 0x8) = *0x8f7114ac;
            }
    }
    else {
            *(r4 + 0x8) = *0x8f7114ac;
    }
    r3 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r3 - 0x1;
    if (r3 == 0x1) {
            loc_ffffffff8f619438();
    }
    r0 = r6;
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

