    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg0;
    r7 = arg1;
    stack[2041] = *0x8f7112f4;
    r0 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r0 + 0x1;
    if (r0 == 0x0) {
            loc_ffffffff8f619448();
    }
    if (*(r4 + 0x4) != 0x0) {
            r3 = *(r4 + 0x8);
            COND = r2 != 0x0;
            if (COND) {
                    *(r4 + 0x4) = 0x0;
            }
            if (CPU_FLAGS & NE) {
                    r4 = 0x0;
            }
            if (CPU_FLAGS & E) {
                    r4 = r2;
            }
    }
    else {
            r4 = loc_ffffffff8f61bc38(r4 + 0xc, r7);
    }
    r3 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r3 - 0x1;
    if (r3 == 0x1) {
            loc_ffffffff8f619438();
    }
    r0 = r4;
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

