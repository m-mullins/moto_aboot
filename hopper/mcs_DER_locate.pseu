    r1 = arg1;
    r8 = arg3;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x24;
    COND = r11 == 0x0;
    r6 = r1;
    r7 = arg2;
    r5 = arg4;
    stack[2037] = 0x0;
    if (COND) goto loc_8f6650cc;

loc_8f664fc8:
    r4 = *r1;
    if (r4 == 0x0) goto loc_8f6650d0;

loc_8f664fd4:
    r4 = 0x0;
    r10 = zero_extend_32(r8 - 0x1);
    goto loc_8f664fe0;

loc_8f664fe0:
    if (*r6 < r4) goto loc_8f6650d0;

loc_8f664fec:
    r12 = r11 + r4;
    if (*(r11 + r4) == r7) goto loc_8f665030;

loc_8f664ffc:
    stack[2036] = *r6 - r4;
    r0 = loc_ffffffff8f664ea4(r12, sp + 0x16, sp + 0x18, sp + 0x1a, stack[2030]);
    r12 = r12;
    if (r0 == 0x0) goto loc_8f665054;

loc_8f66502c:
    r0 = 0x1;
    goto loc_8f6650e4;

loc_8f6650e4:
    r3 = *r0;
    *r6 = r4;
    if (stack[2037] != r3) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f665054:
    if ((r8 == 0x0) || ((*r12 & 0x20) == 0x0)) goto loc_8f6650bc;

loc_8f665068:
    stack[2030] = r5;
    r4 = zero_extend_32(r4 + stack[2036] + 0x1);
    stack[2036] = stack[2037];
    r3 = r10;
    r0 = loc_ffffffff8f664f8c(r11 + r4, sp + 0x16, r7, r3, stack[2030]);
    if (r0 == 0x3) {
            r3 = stack[2037];
    }
    if (CPU_FLAGS & E) {
            stack[2036] = r3;
    }
    if (CPU_FLAGS & E) goto loc_8f6650bc;

loc_8f6650a8:
    if (r0 == 0x0) {
            r3 = stack[2036];
    }
    if (CPU_FLAGS & E) {
            r4 = r4 + r3;
    }
    if (CPU_FLAGS & E) {
            r4 = zero_extend_32(r4);
    }
    goto loc_8f6650e4;

loc_8f6650bc:
    r4 = zero_extend_32(r4 + stack[2036]);
    goto loc_8f664fe0;

loc_8f665030:
    if (r5 == 0x0) goto loc_8f6650e0;

loc_8f665038:
    r0 = *r5;
    r0 = zero_extend_32(r0 - 0x1);
    *r5 = r0;
    if (r0 != 0x0) goto loc_8f664ffc;
    goto loc_8f6650e4;

loc_8f6650e0:
    r0 = r5;
    goto loc_8f6650e4;

loc_8f6650d0:
    r0 = 0x3;
    goto loc_8f6650e4;

loc_8f6650cc:
    r4 = r11;
    goto loc_8f6650d0;

