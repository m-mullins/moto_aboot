    r1 = arg1;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x5c;
    r7 = lr;
    r3 = *0x8f7112f4;
    stack[2037] = r3;
    if (loc_ffffffff8f604894(arg0, r1, arg2, r3, stack[2016]) == 0x0) {
            r1 = "ASSERT FAILED at (%s:%d): %s\n";
            loc_ffffffff8f6484ac(r7, r1, "platform/msm8916/platform.c", 0xae, "smem_ram_ptable_init_v1()");
    }
    r0 = loc_ffffffff8f604a00();
    r6 = 0x0;
    s0 = r0;
    while (r6 != s0) {
            r1 = r6;
            r0 = loc_ffffffff8f6049b8(sp + 0x14, r1);
            if (stack[2032] == 0x1) {
                    r3 = stack[2030];
                    if (r3 != 0xe) {
                            CMP(r3, 0x5);
                    }
                    if (!CPU_FLAGS & NE) {
                            COND = r1 == 0x0;
                            if (!COND) {
                                    r1 = "ASSERT FAILED at (%s:%d): %s\n";
                                    r0 = loc_ffffffff8f6484ac(r7, r1, "platform/msm8916/platform.c", 0xbd, "(ptn_entry.start & (MB-1)) == 0");
                            }
                            r10 = 0x0;
                            r11 = stack[2027] >> stack[2027] / 0x100000 | stack[2028] * 0x1000;
                            r3 = r11 + 0xfff;
                            while (r11 != r10) {
                                    r0 = r3 - r10;
                                    r10 = r10 + 0x1;
                                    r1 = stack[2025] + r0 * 0x100000;
                                    r0 = loc_ffffffff8f61996c(stack[2025] + r0 * 0x100000, r1, 0xc18);
                                    r3 = r3;
                            }
                    }
            }
            r6 = r6 + 0x1;
    }
    r4 = 0x8f67c624;
    r7 = r4 + 0x40;
    do {
            r6 = *r4;
            r5 = 0x0;
            s0 = r6 + 0xfff;
            while (r5 != r6) {
                    r3 = s0 - r5;
                    asm{ ldmdb      r4, {r0, r1} };
                    r5 = r5 + 0x1;
                    r1 = (r3 << r3 * 0x100000) + r1;
                    r0 = loc_ffffffff8f61996c((r3 << r3 * 0x100000) + r0, r1, *(r4 + 0x4), r3 << r3 * 0x100000);
            }
            r4 = r4 + 0x10;
    } while (r4 != r7);
    if (stack[2037] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

