    r1 = arg1;
    r0 = arg0;
    r12 = r0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x14;
    r3 = *0x8f7112f4;
    r4 = r1;
    stack[2043] = r3;
    asm{ ldm        r1, {r1, r3} };
    if (r1 != r3) {
            r3 = r3 + 0x1;
    }
    if (CPU_FLAGS & NE) {
            *(r4 + 0x4) = r3;
    }
    if (CPU_FLAGS & NE) {
            r0 = 0x0;
    }
    if (!CPU_FLAGS & NE) {
            r2 = *(r4 + 0xc);
            r0 = *(r4 + 0x8);
            loc_ffffffff8f64b2c0(r0, r12, r2);
            loc_ffffffff8f656968(0x2, "DEBUG: %s: index = %d val = [%s]\n", "index_value_cb", *r4, *(r4 + 0x8));
            r0 = 0x1;
    }
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

