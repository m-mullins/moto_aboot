    stack[2044] = r6;
    stack[2045] = r7;
    stack[2046] = r8;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r8 = arg0;
    r7 = arg1;
    r6 = arg2;
    r3 = *"userdata";
    stack[2040] = r3;
    r0 = loc_ffffffff8f6539b0("userdata", arg1, arg2, r3, arg0, stack[2040], arg2, r4, r5, stack[2044], stack[2045], stack[2046], lr);
    COND = r5 != 0x0;
    r4 = r0;
    if (COND) {
            r5 = 0x1;
    }
    if (r8 != 0x0) {
            CMP(r0, -0x1);
    }
    if (CPU_FLAGS & NE) {
            *r8 = r0;
    }
    if (r7 == 0x0) {
            r3 = 0x0;
    }
    if (CPU_FLAGS & NE) {
            r3 = r5 & 0x1;
    }
    if (r3 != 0x0) {
            loc_ffffffff8f653b20();
            asm{ strd       r0, r1, [r7] };
    }
    if (r6 == 0x0) {
            r3 = 0x0;
    }
    if (CPU_FLAGS & NE) {
            r3 = r5 & 0x1;
    }
    if (r3 != 0x0) {
            loc_ffffffff8f653a28(r4);
            asm{ strd       r0, r1, [r6] };
    }
    r0 = r5;
    if (stack[2040] != *r0) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

