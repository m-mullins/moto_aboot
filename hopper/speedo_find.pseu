    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r7 = r0;
    stack[2041] = *0x8f7112f4;
    r2 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r2 + 0x1;
    if (r2 == 0x0) {
            r0 = loc_ffffffff8f619448();
    }
    r4 = *(0x8f710e80 + 0x4);
    goto loc_8f677d50;

loc_8f677d50:
    if (r4 == 0x8f710e80) goto loc_8f677d90;

loc_8f677d58:
    r0 = loc_ffffffff8f64b470(r4 + 0x8, r7, 0x20);
    if (r0 != 0x0) goto loc_8f677d88;

loc_8f677d70:
    r3 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r3 - 0x1;
    if (r3 == 0x1) {
            loc_ffffffff8f619438();
    }
    goto loc_8f677dac;

loc_8f677dac:
    r0 = r4;
    goto loc_8f677db0;

loc_8f677db0:
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f677d88:
    r4 = *(r4 + 0x4);
    goto loc_8f677d50;

loc_8f677d90:
    r4 = *0x8f6ac0f0;
    r4 = r4 - 0x1;
    *0x8f6ac0f0 = r4;
    if (r4 != 0x0) {
            r0 = 0x0;
    }
    if (CPU_FLAGS & NE) goto loc_8f677db0;

loc_8f677da8:
    loc_ffffffff8f619438();
    goto loc_8f677dac;

