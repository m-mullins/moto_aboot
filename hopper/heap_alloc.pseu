    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r7 = r1 - 0x1 & r1;
    COND = r7 != 0x0;
    r4 = r1;
    stack[2040] = *0x8f7112f4;
    if (COND) goto loc_8f649a0c;

loc_8f64989c:
    COND = r5 >= 0x0;
    if (CPU_FLAGS & NS) {
            r1 = "invalid input size\n";
    }
    if (CPU_FLAGS & NB) goto loc_8f6498dc;

loc_8f6498ac:
    if (r5 < 0xb) {
            r5 = 0xc;
    }
    r5 = r5 + 0x3 & !0x3;
    if (r4 == 0x0) goto loc_8f6498e8;

loc_8f6498c4:
    if (r4 < 0xf) {
            r4 = 0x10;
    }
    r5 = r4 + r5;
    COND = r5 < 0x0;
    if (COND) goto loc_8f6498e8;

loc_8f6498dc:
    loc_ffffffff8f656968();
    r0 = r7;
    goto loc_8f649a18;

loc_8f649a18:
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f6498e8:
    r2 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r2 + 0x1;
    if (r2 == 0x0) {
            loc_ffffffff8f619448();
    }
    r2 = 0x8f6e0bf0;
    r3 = *(0x8f6e0be8 + 0xc);
    goto loc_8f649914;

loc_8f649914:
    if (r3 == r2) goto loc_8f6499ec;

loc_8f649920:
    r12 = *(r3 + 0x8);
    if (r12 < r5) goto loc_8f6499e4;

loc_8f64992c:
    r2 = *(r3 + 0x4);
    *r2 = *r3;
    if (r2 != 0x8f6e0bf0) {
            r1 = r2;
    }
    if (CPU_FLAGS & E) {
            r1 = 0x0;
    }
    r0 = 0x8f6e0be8;
    *(r0 + 0x4) = r2;
    *(r3 + 0x4) = 0x0;
    *r3 = 0x0;
    if (r12 >= r5 + 0xc) {
            r2 = r3 + r5;
            *(r2 + 0x8) = r12 - r5;
            *(r3 + 0x8) = r5;
            if (r1 != 0x0) {
                    *(r3 + r5) = *r1;
                    r0 = *r1;
                    *(r2 + 0x4) = r1;
                    *(r0 + 0x4) = r2;
                    *r1 = r2;
            }
            else {
                    r0 = 0x8f6e0be8;
                    *(r3 + r5) = *(r0 + 0x8);
                    r1 = *(r0 + 0x8);
                    *(r2 + 0x4) = 0x8f6e0bf0;
                    *(r1 + 0x4) = r2;
                    *(r0 + 0x8) = r2;
            }
    }
    r2 = r3 + 0xc;
    if (r4 != 0x0) {
            r0 = r4 - 0x1;
    }
    if (CPU_FLAGS & NE) {
            r4 = 0x0 - r4;
    }
    if (CPU_FLAGS & NE) {
            r2 = r0 + r2;
    }
    if (CPU_FLAGS & E) {
            r4 = r2;
    }
    if (CPU_FLAGS & NE) {
            r4 = r2 & r4;
    }
    r1 = *(r3 + 0x8);
    *(r4 + 0xfffffffffffffff8) = r3;
    *(r4 + 0xfffffffffffffffc) = r1;
    *(r4 + 0xfffffffffffffff4) = 0x48454150;
    goto loc_8f6499f0;

loc_8f6499f0:
    r2 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r2 - 0x1;
    if (r2 == 0x1) {
            loc_ffffffff8f619438();
    }
    r0 = r4;
    goto loc_8f649a18;

loc_8f6499e4:
    r3 = *(r3 + 0x4);
    goto loc_8f649914;

loc_8f6499ec:
    r4 = 0x0;
    goto loc_8f6499f0;

loc_8f649a0c:
    r0 = 0x0;
    goto loc_8f649a18;

