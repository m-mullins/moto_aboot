    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x5c;
    r6 = arg2;
    stack[2027] = arg3;
    stack[2026] = arg0;
    stack[2020] = arg5;
    stack[2028] = arg4;
    stack[2024] = arg8;
    stack[2023] = arg7;
    stack[2029] = arg10;
    stack[2025] = arg9;
    r4 = arg6;
    r5 = arg11;
    stack[2037] = *0x8f7112f4;
    stack[2021] = SAR(arg2 + 0x1, (arg2 + 0x1) / 0x2);
    stack[2019] = SAR(arg2 + 0x3, (arg2 + 0x3) / 0x4);
    r11 = r11 << (SAR(arg2 + 0x3, (arg2 + 0x3) / 0x4)) * 0x4;
    loc_ffffffff8f66a82c(stack[2024], arg1, arg2, (SAR(arg2 + 0x3, (arg2 + 0x3) / 0x4)) + 0x1, stack[2016], stack[2017], stack[2018]);
    r7 = r11 + 0x4;
    *(stack[2024] + stack[2019] * 0x4) = 0x0;
    *(stack[2025] + stack[2019] * 0x4) = 0x0;
    stack[2035] = stack[2025];
    loc_ffffffff8f666994(sp + 0x38);
    loc_ffffffff8f6673fc(arg1, stack[2023], r6);
    loc_ffffffff8f667304(r4 + 0x4, 0x0, r6 << (s0 >> r11 / 0x2) * 0x8);
    *r4 = 0x1;
    loc_ffffffff8f665554(r4, (s0 >> r11 / 0x2 << 0x1) + 0x1, stack[2023], stack[2021]);
    loc_ffffffff8f6674b8(r4 + ((0x1 - stack[2021]) + (s0 >> r11 / 0x2 << 0x1)) * 0x4, stack[2020], r6, 0x1 - stack[2021]);
    loc_ffffffff8f66a82c(stack[2035], stack[2020], r6);
    loc_ffffffff8f667304(stack[2020], 0x0, r6 - 0x1);
    *(0xffffffffffffffff + stack[2020] + r6) = 0x1;
    if (r5 != 0x0) goto loc_8f666084;

loc_8f665fb4:
    r7 = r4 + r7;
    s0 = sp + 0x38;
    r12 = r5;
    r8 = r5;
    goto loc_8f665fc4;

loc_8f665fc4:
    if (r8 >= stack[2028]) goto loc_8f66619c;

loc_8f665fd0:
    stack[2022] = 0x8;
    r10 = *(stack[2027] + r8);
    goto loc_8f665fe0;

loc_8f665fe0:
    if (r12 == 0x0) goto loc_8f666018;

loc_8f665fe8:
    loc_ffffffff8f6669e0(s0, r4, r4);
    if ((r10 & 0x80) != 0x0) {
            loc_ffffffff8f666fa8(s0, r4, r4, r7);
    }
    goto loc_8f666060;

loc_8f666060:
    r12 = 0x1;
    goto loc_8f666064;

loc_8f666064:
    r2 = stack[2022] - 0x1;
    COND = r2 != 0x0;
    r10 = zero_extend_32(r10 << r10 * 0x2);
    stack[2022] = r2;
    if (COND) goto loc_8f665fe0;

loc_8f66607c:
    r8 = r8 + 0x1;
    goto loc_8f665fc4;

loc_8f666018:
    if ((r10 & 0x80) == 0x0) goto loc_8f666064;

loc_8f666020:
    loc_ffffffff8f66a82c(r7, stack[2026], r6);
    *(r7 + r11) = r12;
    loc_ffffffff8f666fa8(s0, r4, r7, stack[2035]);
    loc_ffffffff8f66a974(s0, r7, r4);
    goto loc_8f666060;

loc_8f66619c:
    if (r12 != 0x0) {
            loc_ffffffff8f666d88(sp + 0x38, r4, r4);
            loc_ffffffff8f66a8d8(stack[2020], r4, r6);
    }
    loc_ffffffff8f6673b4(sp + 0x38, 0x1c);
    loc_ffffffff8f6673b4(r4, (0x1c << (r6 << stack[2019] * 0x4) * 0x4) + 0x4);
    loc_ffffffff8f6673b4(stack[2023], (0x1c << (r6 << stack[2019] * 0x4) * 0x4) + 0x4 << stack[2021] * 0x4, stack[2021]);
    r7 = stack[2019] + 0x1;
    loc_ffffffff8f6673b4(stack[2024], (r6 << stack[2019] * 0x4) + 0x4);
    loc_ffffffff8f6673b4(stack[2025], (r6 << stack[2019] * 0x4) + 0x4);
    r1 = ((r6 << stack[2019] * 0x4) + 0x4 << stack[2019] * 0x8) + 0x1c;
    r0 = loc_ffffffff8f6673b4(stack[2029], r1);
    if (r5 != 0x0) {
            r0 = loc_ffffffff8f6673b4(r5, r1 << r7 * 0x40);
    }
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f666084:
    r10 = r5 + r7;
    loc_ffffffff8f66a82c(r5, stack[2026], r6);
    s0 = r5 + r7 * 0x2;
    *(r5 + stack[2019] * 0x4) = 0xe;
    loc_ffffffff8f666fa8(sp + 0x38, r10, r5, stack[2035]);
    r12 = (0xc0000000 ^ 0xffffffff) * r7;
    r11 = sp + 0x38;
    r8 = 0xe;
    do {
            loc_ffffffff8f666fa8(r11, s0, s0 + r12, r10, r12);
            r8 = r8 - 0x1;
            COND = r8 != 0x0;
            s0 = s0 + r7;
            r12 = r12;
    } while (COND);
    r12 = r8;
    s0 = r11;
    goto loc_8f6660f8;

loc_8f6660f8:
    r3 = stack[2028];
    if (r8 >= r3) goto loc_8f66619c;

loc_8f666104:
    r10 = 0x2;
    r11 = *(stack[2027] + r8);
    goto loc_8f666110;

loc_8f666110:
    r3 = r3 >> r11 / 0x10;
    if (r12 == 0x0) goto loc_8f666168;

loc_8f66611c:
    r12 = 0x4;
    do {
            loc_ffffffff8f6669e0(s0, r4, r4);
            r3 = r3;
            r12 = r12 - 0x1;
            COND = r12 != 0x0;
    } while (COND);
    if (r3 != 0x0) {
            r3 = r5 + r7 * r3;
            loc_ffffffff8f666fa8(s0, r4, r4, r3);
    }
    goto loc_8f666180;

loc_8f666180:
    r12 = 0x1;
    goto loc_8f666184;

loc_8f666184:
    r10 = r10 - 0x1;
    COND = r10 != 0x0;
    r11 = zero_extend_32(r11 << r11 * 0x10);
    if (COND) goto loc_8f666110;

loc_8f666194:
    r8 = r8 + 0x1;
    goto loc_8f6660f8;

loc_8f666168:
    if (r3 == 0x0) goto loc_8f666184;

loc_8f666170:
    loc_ffffffff8f66a974(s0, r4, r5 + r7 * r3);
    goto loc_8f666180;

