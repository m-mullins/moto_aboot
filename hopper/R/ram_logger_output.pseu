    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x30;
    r4 = r0;
    stack[2043] = *0x8f7112f4;
    if (*(0x8f6aff30 + 0x2c) == 0x0) goto loc_8f6578d4;

loc_8f65781c:
    r3 = *r0;
    r2 = sign_extend_32(r3);
    if (r2 > 0x7) {
            r3 = r3 - 0xa;
    }
    if (CPU_FLAGS & G) goto loc_8f65783c;

loc_8f657830:
    if (r2 <= 0x2) goto loc_8f657840;

loc_8f657838:
    r3 = r3 - 0x5;
    goto loc_8f65783c;

loc_8f65783c:
    *r4 = r3;
    goto loc_8f657840;

loc_8f657840:
    asm{ ldrsb      r2, [r4] };
    asm{ ldrsb      r3, [r1] };
    if (r2 <= r3) {
            asm{ ldmib      r4, {r2, r3} };
            r0 = r3 - 0x1;
            if (*(r2 + r0) != 0xa) {
                    if (r3 != 0x3ff) {
                            *(r2 + r3) = 0xa;
                    }
                    if (CPU_FLAGS & NE) {
                            r3 = *(r4 + 0x8);
                    }
                    if (CPU_FLAGS & E) {
                            *(r2 + r0) = 0xa;
                    }
                    if (CPU_FLAGS & NE) {
                            r3 = r3 + 0x1;
                    }
                    if (CPU_FLAGS & NE) {
                            *(r4 + 0x8) = r3;
                    }
            }
            asm{ ldrsb      r3, [r4] };
            if (r3 >= -0x2) {
                    r6 = loc_ffffffff8f60c68c();
                    asm{ ldrsb      r0, [r4] };
                    r0 = loc_ffffffff8f656898();
                    loc_ffffffff8f64a9f0(sp + 0xc, 0x20, "[%8u] %s - ", r6, r0);
                    r0 = loc_ffffffff8f64b354(sp + 0xc);
                    loc_ffffffff8f657710(sp + 0xc, r0);
            }
            asm{ ldmib      r4, {r0, r1} };
            loc_ffffffff8f657710();
    }
    goto loc_8f6578d4;

loc_8f6578d4:
    if (stack[2043] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

