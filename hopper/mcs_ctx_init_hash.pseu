    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    COND = r4 == 0x0;
    r5 = r0;
    stack[2043] = *0x8f7112f4;
    if ((!COND) && (r0 == 0xd)) {
            loc_ffffffff8f667304(r4, 0x0, 0x60);
            r3 = 0x8f6a69eb;
            r1 = r3 + 0x14;
            *r4 = r5;
            r2 = r4 + 0x44;
            do {
                    r0 = *r3;
                    r3 = r3 + 0x4;
                    r2 = r2 + 0x4;
                    *r2 = r0 << r0 * 0x10000 | *(r3 + 0xfffffffffffffffb) * 0x1000000 | *(r3 + 0xfffffffffffffffe) | *(r3 + 0xfffffffffffffffd) * 0x100;
            } while (r3 != r1);
            r0 = 0x0;
            *(r4 + 0x4) = r0;
            *(r4 + 0x5c) = r0;
    }
    else {
            r0 = 0x1;
    }
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

