    stack[2037] = arg0;
    stack[2040] = r4;
    stack[2041] = r5;
    stack[2043] = r7;
    stack[2044] = r8;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r5 = arg3;
    r7 = arg0;
    r4 = arg1;
    r8 = arg2;
    r3 = *arg0;
    stack[2038] = r3;
    r0 = loc_ffffffff8f64b880(arg0, arg1, arg2, r3, stack[2037], stack[2038], arg2, stack[2040], stack[2041], r6, stack[2043], stack[2044], r10, r11, lr);
    if (r0 != 0x0) goto loc_8f64c070;

loc_8f64bfc8:
    r10 = r5 + 0x1;
    *(0xfffffffffffffff8 + sp + 0x8) = r0;
    goto loc_8f64bfd4;

loc_8f64bfd4:
    r3 = stack[2037];
    if (r4 >= 0x0) {
            CMP(r3, 0x0);
    }
    if (CPU_FLAGS & L) goto loc_8f64c05c;

loc_8f64bfe4:
    if (r3 != 0x1) goto loc_8f64c044;

loc_8f64bfec:
    r0 = loc_ffffffff8f64b9a0(r7, r4 + 0x4, r10);
    COND = r11 == 0x0;
    if ((COND) || (loc_ffffffff8f64af40() != 0x0)) goto loc_8f64c044;

loc_8f64c018:
    r11 = *(r11 + r5);
    if ((r11 == 0x0) || ((loc_ffffffff8f64aee0(r8, 0x40, r5) == 0x0) && (r11 == 0x40))) goto loc_8f64c06c;

loc_8f64c044:
    r0 = loc_ffffffff8f64bc10(r7, r4, sp);
    r4 = r0;
    goto loc_8f64bfd4;

loc_8f64c06c:
    r0 = r4;
    goto loc_8f64c070;

loc_8f64c070:
    if (stack[2038] != *r0) {
            loc_ffffffff8f648514();
    }
    return;

loc_8f64c05c:
    if (r3 >= 0x0) {
            r0 = r4;
    }
    if (CPU_FLAGS & L) {
            r0 = 0x0 ^ 0xffffffff;
    }
    goto loc_8f64c070;

