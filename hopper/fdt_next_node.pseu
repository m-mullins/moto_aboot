    r3 = 0x8f7112f4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg2;
    r7 = arg0;
    r6 = r3;
    stack[2041] = *r3;
    stack[2040] = 0x0;
    if (arg1 < 0x0) goto loc_8f64bc4c;

loc_8f64bc3c:
    r0 = loc_ffffffff8f64bb48();
    stack[2040] = r0;
    if (r0 < 0x0) goto loc_8f64bcd0;

loc_8f64bc4c:
    r5 = stack[2040];
    r0 = loc_ffffffff8f64ba24(r7, r5, sp + 0x0);
    if (r0 == 0x2) goto loc_8f64bc8c;

loc_8f64bc68:
    if (r0 == 0x9) goto loc_8f64bcb0;

loc_8f64bc70:
    if (r0 != 0x1) goto loc_8f64bc4c;

loc_8f64bc78:
    if (r4 != 0x0) {
            r3 = *r4;
    }
    if (CPU_FLAGS & NE) {
            r3 = r3 + 0x1;
    }
    if (CPU_FLAGS & NE) {
            *r4 = r3;
    }
    goto loc_8f64bcd0;

loc_8f64bcd0:
    if (stack[2041] != *r6) {
            loc_ffffffff8f648514();
    }
    return;

loc_8f64bcb0:
    r0 = stack[2040];
    goto loc_8f64bcd0;

loc_8f64bc8c:
    if (r4 == 0x0) goto loc_8f64bc4c;

loc_8f64bc94:
    r2 = *r4;
    *r4 = r2 - 0x1;
    if (r2 >= 0x1) goto loc_8f64bc4c;

