    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x24;
    r2 = 0x0;
    r4 = lr;
    stack[2039] = *0x8f7112f4;
    r3 = 0x0;
    asm{ strd       r2, r3, [sp, #0x40 + var_38] };
    asm{ strd       r2, r3, [sp, #0x40 + var_30] };
    if (loc_ffffffff8f6364dc(r0, r1, r2, r3, stack[2032]) == 0x0) goto loc_8f636b3c;

loc_8f636b34:
    r0 = 0x0;
    goto loc_8f636d94;

loc_8f636d94:
    if (stack[2039] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f636b3c:
    r2 = sp + 0x10;
    if (loc_ffffffff8f634d98() != 0x0) goto loc_8f636b5c;

loc_8f636b54:
    s0 = 0x10 ^ 0xffffffff;
    goto loc_8f636d74;

loc_8f636d74:
    if (*0x8f6e0794 != 0x0) {
            loc_ffffffff8f64ab9c();
            *0x8f6e0794 = 0x0;
    }
    r0 = s0;
    goto loc_8f636d94;

loc_8f636b5c:
    r3 = 0x0;
    asm{ ldrd       r2, r3, [sp, #0x40 + var_38] };
    COND = r1 == 0x0;
    if (!COND) {
            r3 = 0x0;
            asm{ ldrd       r2, r3, [sp, #0x40 + var_30] };
            COND = r1 != 0x0;
            if (!COND) {
                    r2 = "app/mbm/sod.c";
                    loc_ffffffff8f6484ac(r4, "ASSERT FAILED at (%s:%d): %s\n", r2, 0x395, 0x8f69b659);
            }
    }
    else {
            r2 = "app/mbm/sod.c";
            loc_ffffffff8f6484ac(r4, "ASSERT FAILED at (%s:%d): %s\n", r2, 0x395, 0x8f69b659);
    }
    r3 = *0x8f6e0794;
    if (r3 != 0x0) {
            r8 = 0x0;
    }
    if (CPU_FLAGS & NE) goto loc_8f636c64;

loc_8f636ba0:
    loc_ffffffff8f656968(0x1, "Enabling SOD\n");
    r0 = loc_ffffffff8f64ab44(0xda8, 0x1);
    r4 = r0;
    *0x8f6e0794 = r0;
    if (r0 != 0x0) goto loc_8f636be0;

loc_8f636bcc:
    loc_ffffffff8f656968(0x0 ^ 0xffffffff, 0x8f69b2a8);
    s0 = 0x4 ^ 0xffffffff;
    goto loc_8f636d74;

loc_8f636be0:
    r3 = 0x2d83fbe7;
    r5 = 0x0 ^ 0xffffffff;
    *r0 = r3;
    r0 = loc_ffffffff8f635424();
    asm{ ldrd       r2, r3, [sp, #0x40 + var_30] };
    r5 = r5 & r3;
    if (r0 == 0x0) {
            r0 = 0x2000000;
    }
    if (CPU_FLAGS & NE) {
            r0 = 0x80000;
    }
    *(r4 + 0x10) = r0;
    r4 = 0xfffe0000 & r2;
    asm{ strd       r4, r5, [sp, #0x40 + var_30] };
    if (loc_ffffffff8f635424() != 0x0) {
            r2 = 0x80000;
    }
    if (CPU_FLAGS & E) {
            r2 = 0x2000000;
    }
    if (r5 == 0x0) {
            CMP(r4, r2);
    }
    if (CPU_FLAGS & NB) goto loc_8f636c3c;

loc_8f636c34:
    s0 = 0x19 ^ 0xffffffff;
    goto loc_8f636d74;

loc_8f636c3c:
    asm{ ldrd       r4, r5, [sp, #0x40 + var_30] };
    r8 = 0x1;
    r3 = 0x0;
    if (loc_ffffffff8f635424() != 0x0) {
            r2 = 0x80000;
    }
    if (CPU_FLAGS & E) {
            r2 = 0x2000000;
    }
    r2 = r4 - r2;
    r3 = r5 - r3 + !CARRY(FLAGS);
    asm{ strd       r2, r3, [sp, #0x40 + var_30] };
    goto loc_8f636c64;

loc_8f636c64:
    loc_ffffffff8f656968(0x1, "Enabling RAM dump\n");
    if (loc_ffffffff8f635424() == 0x0) goto loc_8f636c94;

loc_8f636c7c:
    r0 = loc_ffffffff8f635424();
    if (r0 != 0x0) {
            r0 = 0x0;
    }
    if (!CPU_FLAGS & NE) {
            r0 = loc_ffffffff8f61a7d0();
    }
    asm{ ldrd       r2, r3, [sp, #0x40 + var_30] };
    r4 = r0;
    if (r3 == 0x0) {
            CMP(r2, r4);
    }
    if (CPU_FLAGS & B) goto loc_8f636c34;

loc_8f636cbc:
    r2 = 0x1;
    r0 = 0x1 - r4;
    r1 = r3 - 0x0 + !CARRY(FLAGS);
    asm{ strd       r0, r1, [sp, #0x40 + var_30] };
    r0 = loc_ffffffff8f634f04(r0, r1, r2);
    COND = s0 != 0x0;
    if (!COND) {
            if (r8 != 0x0) {
                    r12 = *0x8f6e0794;
                    asm{ ldrd       r2, r3, [sp, #0x40 + var_38] };
                    asm{ ldrd       r0, r1, [sp, #0x40 + var_30] };
                    r2 = r2 + r0;
                    asm{ strd       r2, r3, [ip, #0x8] };
                    *(r12 + 0x4) = *(r12 + 0x4) | 0x1;
                    if (loc_ffffffff8f635424() != 0x0) {
                            r2 = *(*0x8f6e0794 + 0x4);
                            r2 = r2 | 0x20;
                    }
                    else {
                            r2 = *(*0x8f6e0794 + 0x4);
                            r2 = r2 & !0x20;
                    }
                    r6 = 0x8f6e0794;
                    r0 = *r6;
                    *(0x0 + 0x4) = r2;
                    r3 = 0x0;
                    asm{ strd       r4, r5, [r0, #0x18] };
                    *(r0 + 0x20) = r3;
                    loc_ffffffff8f6355e8(r0);
                    r0 = *r6;
                    r0 = loc_ffffffff8f635198(r0);
                    COND = s0 == 0x0;
                    if (!COND) {
                            if (*0x8f6e0794 != 0x0) {
                                    loc_ffffffff8f64ab9c();
                                    *0x8f6e0794 = 0x0;
                            }
                            r0 = s0;
                    }
                    else {
                            r0 = 0x0;
                    }
            }
            else {
                    r0 = *0x8f6e0794;
                    r0 = loc_ffffffff8f634e38(r0);
                    COND = s0 != 0x0;
                    if (!COND) {
                            r12 = *0x8f6e0794;
                            asm{ ldrd       r2, r3, [sp, #0x40 + var_38] };
                            asm{ ldrd       r0, r1, [sp, #0x40 + var_30] };
                            r2 = r2 + r0;
                            asm{ strd       r2, r3, [ip, #0x8] };
                            *(r12 + 0x4) = *(r12 + 0x4) | 0x1;
                            if (loc_ffffffff8f635424() != 0x0) {
                                    r2 = *(*0x8f6e0794 + 0x4);
                                    r2 = r2 | 0x20;
                            }
                            else {
                                    r2 = *(*0x8f6e0794 + 0x4);
                                    r2 = r2 & !0x20;
                            }
                            r6 = 0x8f6e0794;
                            r0 = *r6;
                            *(0x0 + 0x4) = r2;
                            r3 = 0x0;
                            asm{ strd       r4, r5, [r0, #0x18] };
                            *(r0 + 0x20) = r3;
                            loc_ffffffff8f6355e8(r0);
                            r0 = *r6;
                            r0 = loc_ffffffff8f635198(r0);
                            COND = s0 == 0x0;
                            if (!COND) {
                                    if (*0x8f6e0794 != 0x0) {
                                            loc_ffffffff8f64ab9c();
                                            *0x8f6e0794 = 0x0;
                                    }
                                    r0 = s0;
                            }
                            else {
                                    r0 = 0x0;
                            }
                    }
                    else {
                            if (*0x8f6e0794 != 0x0) {
                                    loc_ffffffff8f64ab9c();
                                    *0x8f6e0794 = 0x0;
                            }
                            r0 = s0;
                    }
            }
    }
    else {
            if (*0x8f6e0794 != 0x0) {
                    loc_ffffffff8f64ab9c();
                    *0x8f6e0794 = 0x0;
            }
            r0 = s0;
    }
    goto loc_8f636d94;

loc_8f636c94:
    if (loc_ffffffff8f61a7d0() == 0x0) goto loc_8f636b54;

