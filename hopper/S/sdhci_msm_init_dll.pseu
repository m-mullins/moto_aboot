    r2 = arg2;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = r0;
    stack[2041] = *0x8f7112f4;
    r3 = *r0;
    r7 = *(r3 + 0x10c);
    r7 = r7 & 0x2;
    COND = r7 != 0x0;
    if (COND) {
            r2 = *(r3 + 0x10c);
    }
    if (CPU_FLAGS & NE) {
            r2 = r2 & !0x2;
    }
    if (CPU_FLAGS & NE) {
            *(r3 + 0x10c) = r2;
    }
    r3 = *r0;
    *(r3 + 0x100) = *(r3 + 0x100) | 0x40000000;
    r3 = *r0;
    *(r3 + 0x100) = *(r3 + 0x100) | 0x20000000;
    r3 = *(r0 + 0x4);
    if (r3 <= 0x6acfc00) {
            r3 = 0x0;
    }
    else {
            if (r3 < 0x7735940) {
                    r3 = 0x1;
            }
            if (!CPU_FLAGS & B) {
                    if (r3 < 0x82a7440) {
                            r3 = 0x2;
                    }
                    if (!CPU_FLAGS & B) {
                            if (r3 < 0x8f0d180) {
                                    r3 = 0x3;
                            }
                            if (!CPU_FLAGS & B) {
                                    if (r3 < 0x9a7ec80) {
                                            r3 = 0x4;
                                    }
                                    if (!CPU_FLAGS & B) {
                                            if (r3 < 0xa6e49c0) {
                                                    r3 = 0x5;
                                            }
                                            if (!CPU_FLAGS & B) {
                                                    if (r3 < 0xb2564c0) {
                                                            r3 = 0x6;
                                                    }
                                                    if (!CPU_FLAGS & B) {
                                                            if (r3 < 0xbebc200) {
                                                                    r3 = 0x7;
                                                            }
                                                            if (CPU_FLAGS & A) {
                                                                    r3 = 0x0;
                                                            }
                                                    }
                                            }
                                    }
                            }
                    }
            }
    }
    r2 = *r4;
    r5 = 0x32;
    *(r2 + 0x100) = *(r2 + 0x100) & !0x7000000 | r3 * 0x1000000;
    r3 = *r4;
    *(r3 + 0x100) = *(r3 + 0x100) & !0x40000000;
    r3 = *r4;
    *(r3 + 0x100) = *(r3 + 0x100) & !0x20000000;
    r3 = *r4;
    *(r3 + 0x100) = *(r3 + 0x100) | 0x10000;
    r3 = *r4;
    *(r3 + 0x100) = *(r3 + 0x100) | 0x40000;
    goto loc_8f60839c;

loc_8f60839c:
    r3 = *r4;
    r2 = *(r3 + 0x108);
    if ((r2 & 0x80) != 0x0) goto loc_8f6083dc;

loc_8f6083ac:
    r0 = loc_ffffffff8f60c5a0(0x1);
    r5 = r5 - 0x1;
    COND = r5 != 0x0;
    if (COND) goto loc_8f60839c;

loc_8f6083bc:
    loc_ffffffff8f656968(0x0 ^ 0xffffffff, "%s: Failed to get DLL lock: 0x%08x\n", "sdhci_msm_init_dll", *(*r4 + 0x108));
    r0 = 0x1;
    goto loc_8f6083f4;

loc_8f6083f4:
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f6083dc:
    if (r7 != 0x0) {
            r2 = *(r3 + 0x10c);
    }
    if (CPU_FLAGS & NE) {
            r0 = 0x0;
    }
    if (CPU_FLAGS & E) {
            r0 = r7;
    }
    if (CPU_FLAGS & NE) {
            r2 = r2 | 0x2;
    }
    if (CPU_FLAGS & NE) {
            *(r3 + 0x10c) = r2;
    }
    goto loc_8f6083f4;

