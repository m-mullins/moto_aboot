    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r6 = arg1;
    COND = r4 != 0x0;
    stack[2043] = *0x8f7112f4;
    if (!COND) {
            loc_ffffffff8f6484ac(lr, "ASSERT FAILED at (%s:%d): %s\n", "lib/regex/regcomp.c", 0x4bb, "p != ((void *)0)");
    }
    r0 = 0x0;
    r3 = *(r4 + 0x8);
    *r4 = 0x8f70da8d;
    COND = r3 == 0x0;
    *(r4 + 0x4) = 0x8f70da8d;
    r2 = stack[2043];
    r3 = *0x8f7112f4;
    if (COND) {
            *(r4 + 0x8) = r6;
    }
    if (r2 != r3) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

