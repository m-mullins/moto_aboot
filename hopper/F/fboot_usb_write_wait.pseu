    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    stack[2043] = *0x8f7112f4;
    r0 = loc_ffffffff8f61ab98(0x8f6c066c, *0x8f6c064c, arg2, 0x8f6c064c, arg0, stack[2043], arg2, 0x8f7112f4, r5, lr);
    r5 = r0;
    if (r0 == -0xd) {
            r0 = *0x8f6c0650;
            loc_ffffffff8f6051c8(r0);
            r0 = r5;
    }
    else {
            r3 = *0x8f6c0660;
            if (r3 >= 0x0) {
                    r3 = 0x8f6c0654;
            }
            if (CPU_FLAGS & GE) {
                    r3 = *r3;
            }
            if (CPU_FLAGS & GE) {
                    r0 = *(r3 + 0x4);
            }
            if (!CPU_FLAGS & GE) {
                    loc_ffffffff8f656968(0x1, "%s: transaction failed\n", "fboot_usb_write_wait");
                    r0 = 0x0 ^ 0xffffffff;
                    *0x8f6c0658 = 0x2;
            }
    }
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

