    stack[2041] = r4;
    stack[2042] = r5;
    stack[2046] = r10;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r10 = arg3;
    r4 = arg0;
    r5 = arg2;
    r3 = *0x8f7112f4;
    r0 = *0x8f6e0aac;
    stack[2040] = r3;
    r0 = loc_ffffffff8f612dc8(r0, 0x6b, r4, sp + 0x3, arg0, stack[2040], stack[2041], stack[2042], r6, 0x8f6e0aac, 0x8f7112f4, stack[2046], lr);
    COND = r6 >= 0x0;
    if (!COND) {
            loc_ffffffff8f656968(0x0 ^ 0xffffffff, "fan540xx: Couldn't read reg: %X (%d)\n", r4, r6);
            r0 = r6;
    }
    else {
            r3 = 0x0 - r4 - 0x4;
            r3 = r3 + (r4 - 0x4) + CARRY(FLAGS);
            r1 = stack[2040] & !        0x0 ^ 0xffffffff;
    r10;
 ^ 0xffffffff;
    r5;
 |     r0;
    r5;
;
            r1 = zero_extend_32(r1);
            if (r5 == 0x7) {
                    r3 = 0x0;
            }
            stack[2040] = 0x6b;
            r0 = loc_ffffffff8f612ea4();
            COND = r5 >= 0x0;
            if (COND) {
                    r0 = 0x0;
            }
            if (!CPU_FLAGS & GE) {
                    loc_ffffffff8f656968(0x0 ^ 0xffffffff, "fan540xx: Couldn't write reg: %X (%d)\n", r4, r5);
                    r0 = r5;
            }
    }
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

