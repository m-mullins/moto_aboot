    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x3c;
    stack[2037] = *0x8f7112f4;
    r0 = loc_ffffffff8f6788e4(arg0, arg1);
    r11 = r0;
    r6 = loc_ffffffff8f6539b0(*(r0 + 0x4));
    r4 = loc_ffffffff8f653b20();
    r5 = arg1;
    COND = r3 == 0x0;
    if (COND) goto loc_8f678ce0;

loc_8f678a14:
    r0 = loc_ffffffff8f653a28(r6);
    r8 = *(r11 + 0xc);
    s0 = r0;
    if (r8 == 0x0) goto loc_8f678bac;

loc_8f678a2c:
    r0 = loc_ffffffff8f64b470(r8, "__UTAG_HEAD__", 0x20);
    if (r0 != 0x0) goto loc_8f678bac;

loc_8f678a44:
    r7 = r8;
    r6 = r0;
    goto loc_8f678a4c;

loc_8f678a4c:
    r3 = *(r7 + 0x20);
    r6 = r6 + (r3 + 0x3 & !0x3) + 0x2c;
    r0 = loc_ffffffff8f64b470(r7, "__UTAG_TAIL__", 0x20, (r3 + 0x3 & !0x3) + 0x2c);
    r7 = *(r7 + 0x30);
    if (r0 != 0x0) goto loc_8f678a88;

loc_8f678a7c:
    if (r7 == 0x0) goto loc_8f678a94;

loc_8f678bac:
    loc_ffffffff8f656968(0x0, "%s: failed to freeze utags: %d\n", "flash_utags");
    goto loc_8f678ce0;

loc_8f678ce0:
    s0 = 0x0 ^ 0xffffffff;
    goto loc_8f678cc8;

loc_8f678cc8:
    r0 = s0;
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f678a94:
    r6 = r6 + 0x1ff & !0x1fc & !0x3;
    if (r6 > s0) goto loc_8f678bac;

loc_8f678aac:
    r0 = loc_ffffffff8f64aacc(r6);
    COND = r7 == 0x0;
    if (COND) goto loc_8f678bac;

loc_8f678abc:
    s0 = r7;
    do {
            loc_ffffffff8f64ac90(sp + 0x8, r8, 0x20);
            r3 = *(r8 + 0x24);
            r0 = s0;
            r2 = 0x2c;
            asm{ rev        r3, r3 };
            r3 = *(r8 + 0x20);
            r1 = sp + 0x8;
            s0 = s0 + 0x2c;
            asm{ rev        r3, r3 };
            loc_ffffffff8f64ac90(r0, r1, r2, r3, stack[2024], stack[2025]);
            if (*(r8 + 0x20) != 0x0) {
                    loc_ffffffff8f64ac90(s0, *(r8 + 0x2c));
                    s0 = s0 + *(r8 + 0x20);
            }
            r3 = *(r8 + 0x20);
            r2 = r3 + 0x3 & !0x3;
            r3 = r2 - r3;
            COND = r3 == 0x0;
            if (!COND) {
                    stack[2025] = r3;
                    loc_ffffffff8f64adc8(s0, 0x0, r3);
                    s0 = s0 + stack[2025];
            }
            r0 = loc_ffffffff8f64b470(r8, "__UTAG_TAIL__", 0x20);
            COND = r3 != 0x0;
            if (COND) {
                    r8 = *(r8 + 0x30);
            }
    } while (CPU_FLAGS & NE);
    loc_ffffffff8f64adc8(s0, r3, r7 + r6 - s0);
    if (r7 != 0x0) goto .l10;
    goto loc_8f678bac;

.l10:
    if (!CPU_FLAGS & NE) {
            r0 = loc_ffffffff8f64aacc(r6);
            COND = r8 != 0x0;
            if (!COND) {
                    loc_ffffffff8f656968();
                    s0 = 0x0 ^ 0xffffffff;
            }
            else {
                    if (!CPU_FLAGS & NE) {
                            r1 = r8;
                            r0 = loc_ffffffff8f64af40(r7, r1, r6);
                            COND = s0 == 0x0;
                            if (!COND) {
                                    loc_ffffffff8f656968();
                                    s0 = 0x0 ^ 0xffffffff;
                            }
                            else {
                                    if (*(r11 + 0x8) != 0x0) {
                                            r11 = loc_ffffffff8f6539b0();
                                            r4 = loc_ffffffff8f653b20();
                                            r5 = r1;
                                            COND = r3 == 0x0;
                                            if (!COND) {
                                                    r0 = loc_ffffffff8f653a28(r11);
                                                    r2 = r6;
                                                    if (r1 == 0x0) {
                                                            CMP(r0, r2);
                                                    }
                                                    if (!CPU_FLAGS & B) {
                                                            loc_ffffffff8f60b6e8(r4, r5, r6, r7);
                                                    }
                                                    else {
                                                            s0 = 0x0;
                                                    }
                                            }
                                            else {
                                                    s0 = 0x0;
                                            }
                                    }
                                    else {
                                            s0 = 0x0;
                                    }
                            }
                    }
                    else {
                            loc_ffffffff8f656968();
                            s0 = 0x0 ^ 0xffffffff;
                    }
                    loc_ffffffff8f64ab9c(r8);
            }
    }
    else {
            loc_ffffffff8f656968();
            s0 = 0x0 ^ 0xffffffff;
    }
    loc_ffffffff8f64ab9c(r7);
    goto loc_8f678cc8;

loc_8f678a88:
    if (r7 != 0x0) goto loc_8f678a4c;

