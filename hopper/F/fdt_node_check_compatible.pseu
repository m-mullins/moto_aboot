    stack[2045] = r7;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r7 = arg2;
    stack[2040] = *0x8f7112f4;
    r0 = loc_ffffffff8f64c438(arg0, arg1, "compatible", sp, arg0, stack[2040], arg2, r4, r5, r6, stack[2045], 0x8f7112f4, lr);
    r3 = arg0;
    COND = r5 == 0x0;
    if (COND) {
            r0 = r3;
    }
    if (CPU_FLAGS & E) goto loc_8f64c6b4;

loc_8f64c654:
    r4 = r3;
    r0 = loc_ffffffff8f64b354(r7);
    s0 = r0 + 0x1;
    r6 = r0;
    goto loc_8f64c668;

loc_8f64c668:
    if (r4 < r6) goto loc_8f64c6b0;

loc_8f64c670:
    r0 = loc_ffffffff8f64af40(r7, r5, s0);
    if (r0 == 0x0) goto loc_8f64c6b4;

loc_8f64c688:
    r0 = loc_ffffffff8f64aee0(r5, 0x0, r4);
    if (r0 != 0x0) {
            r5 = r0 - r5;
    }
    if (CPU_FLAGS & NE) {
            r5 = r5 ^ 0xffffffff;
    }
    if (CPU_FLAGS & NE) {
            r4 = r4 + r5;
    }
    if (CPU_FLAGS & NE) {
            r5 = r0 + 0x1;
    }
    if (CPU_FLAGS & NE) goto loc_8f64c668;

loc_8f64c6b0:
    r0 = 0x1;
    goto loc_8f64c6b4;

loc_8f64c6b4:
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

