    stack[2045] = r4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg0;
    *(arg0 + 0x2c) = arg1;
    *(arg0 + 0x30) = arg2;
    r3 = *0x8f7112f4;
    *(arg0 + 0x10) = 0x1;
    r0 = loc_ffffffff8f67b488(0xf4240, arg1, arg2, 0x1, arg0, r3, arg2, stack[2045], r5, lr);
    *(r4 + 0x28) = 0x0;
    *(r4 + 0x34) = r0;
    r0 = *(r4 + 0xc);
    loc_ffffffff8f60cae0(r0, 0x8f612228, r4, 0x0);
    if (r3 != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    else {
            r0 = *(r4 + 0xc);
            r0 = loc_ffffffff8f60ca78(r0);
    }
    return r0;

