    r2 = arg2;
    r1 = arg1;
    r11 = arg3;
    r6 = 0x8f6ed830;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x34;
    r12 = 0x8f7112f4;
    r10 = r2;
    asm{ strd       r0, r1, [sp, #0x58 + var_40] };
    r8 = *r6;
    r3 = *r12;
    r12 = r6;
    s0 = *(r8 + 0x20);
    stack[2037] = r3;
    r2 = r2 + s0;
    r3 = r11 + 0x0 + CARRY(FLAGS);
    if (r3 == 0x0) {
            CMP(r2, 0x200000);
    }
    if (CPU_FLAGS & B) goto loc_8f6574cc;

loc_8f6573d8:
    r7 = 0x200000 - s0;
    asm{ strd       r2, r3, [sp, #0x58 + var_38] };
    asm{ ldrd       r2, r3, [sp, #0x58 + var_38] };
    r0 = loc_ffffffff8f650ad0();
    if (r0 == 0x0) goto loc_8f657408;

loc_8f657400:
    r0 = 0x0 ^ 0xffffffff;
    goto loc_8f65756c;

loc_8f65756c:
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f657408:
    asm{ ldrd       r0, r1, [sp, #0x58 + var_40] };
    r2 = 0xfffffe00;
    r0 = r0 + r10;
    r1 = r1 + r11 + CARRY(FLAGS);
    r4 = 0x1ff + r0;
    *(r8 + 0x20) = 0x200;
    r5 = 0x0 + r1 + CARRY(FLAGS) & (0x0 ^ 0xffffffff);
    r4 = (r4 & r2) - r0;
    r5 = r5 - r1 + !CARRY(FLAGS);
    COND = r3 == 0x0;
    if (!COND) {
            r0 = *0x8f6ed830;
            r2 = r4;
            loc_ffffffff8f64adc8(r0 + (s0 - 0x1fc000 - 0x3e00) + r10, 0x2a, r2);
    }
    r1 = 0x8f6ed830;
    asm{ ldrd       r2, r3, [sp, #0x58 + var_38] };
    r0 = *r1;
    r2 = r10 - r2;
    r3 = r11 - r3 + !CARRY(FLAGS);
    r1 = *(r8 + 0x20);
    asm{ strd       r2, r3, [sp, #0x58 + var_50] };
    r1 = r0 + r1;
    asm{ ldrd       r2, r3, [sp, #0x58 + var_38] };
    stack[2026] = r1;
    asm{ ldrd       r0, r1, [sp, #0x58 + var_40] };
    r0 = r0 + r2;
    r1 = r1 + r3 + CARRY(FLAGS);
    asm{ ldrd       r2, r3, [sp, #0x58 + var_50] };
    r2 = r2 + r4;
    if (loc_ffffffff8f650ad0(r0, r1, r2, r3 + r5 + CARRY(FLAGS), stack[2026]) != 0x0) goto loc_8f657400;

loc_8f6574b8:
    *(r8 + 0x20) = (*(r8 + 0x20) - r7) + r10;
    goto loc_8f657558;

loc_8f657558:
    r0 = 0x0;
    *(*0x8f6ed830 + *(r8 + 0x20)) = r0;
    goto loc_8f65756c;

loc_8f6574cc:
    asm{ ldrd       r2, r3, [sp, #0x58 + var_40] };
    r2 = r2 + r10;
    r3 = r3 + r11 + CARRY(FLAGS);
    r4 = 0x1ff + r2;
    r5 = 0x0 + r3 + CARRY(FLAGS) & (0x0 ^ 0xffffffff);
    r4 = (r4 & 0xfffffe00) - r2;
    r5 = r5 - r3 + !CARRY(FLAGS);
    COND = r3 == 0x0;
    if (!COND) {
            loc_ffffffff8f64adc8(r8 + s0 + r10, 0x2a, r4);
            r12 = r12;
    }
    r2 = *r12;
    r3 = *(r8 + 0x20);
    asm{ ldrd       r0, r1, [sp, #0x58 + var_40] };
    r3 = r2 + r3;
    r2 = r4 + r10;
    if (loc_ffffffff8f650ad0() != 0x0) goto loc_8f657400;

loc_8f65754c:
    *(r8 + 0x20) = *(r8 + 0x20) + r10;
    goto loc_8f657558;

