    stack[2045] = r5;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r5 = lr;
    r3 = *0x8f7112f4;
    stack[2043] = r3;
    r0 = loc_ffffffff8f64aacc(0xc, arg1, arg2, r3, arg0, arg1, arg2, stack[2043], r4, stack[2045], 0x8f7112f4, lr);
    COND = r4 != 0x0;
    if (!COND) {
            loc_ffffffff8f6484ac(r5, "ASSERT FAILED at (%s:%d): %s\n", "platform/msm_shared/dev_tree.c", 0x71, "dt_node_member");
    }
    *(r4 + 0x4) = 0x0;
    *r4 = 0x0;
    r0 = loc_ffffffff8f64aacc(0x28);
    *(r4 + 0x8) = r0;
    if (r0 == 0x0) {
            loc_ffffffff8f6484ac(r5, "ASSERT FAILED at (%s:%d): %s\n", "platform/msm_shared/dev_tree.c", 0x76, "dt_node_member->dt_entry_m");
    }
    r0 = *(r4 + 0x8);
    loc_ffffffff8f64adc8(r0, 0x0, 0x28);
    r0 = r4;
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

