    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x1c;
    r8 = arg0;
    r3 = *0x8f7112f4;
    stack[2037] = r3;
    r6 = loc_ffffffff8f6539b0(arg0, arg1, arg2, r3, stack[2032]);
    r4 = loc_ffffffff8f653b20();
    r5 = arg1;
    COND = r3 == 0x0;
    loc_ffffffff8f653a28(r6);
    if (CPU_FLAGS & E) goto loc_8f622e80;

loc_8f622e58:
    r0 = *0x8f6c03bc;
    r0 = (*(r0 + 0x8))(r0);
    COND = s0 != 0x0;
    if (COND) goto loc_8f622e8c;

loc_8f622e70:
    loc_ffffffff8f656968();
    goto loc_8f622e80;

loc_8f622e80:
    loc_ffffffff8f62192c();
    goto loc_8f622e84;

loc_8f622e84:
    r0 = 0x3;
    goto loc_8f622f50;

loc_8f622f50:
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f622e8c:
    if (*0x1 == 0x2) goto loc_8f622ecc;

loc_8f622e9c:
    loc_ffffffff8f656968();
    if (loc_ffffffff8f622518(r8) != -0x1) goto loc_8f622ee8;

loc_8f622eb8:
    loc_ffffffff8f656968(0x0, "Failed to erase partition %s\n", r8);
    goto loc_8f622e84;

loc_8f622ee8:
    r0 = *0x8f6c03bc;
    r8 = (*(r0 + 0xc))(r0);
    r0 = *0x8f6c03bc;
    r0 = (*r0)(r0);
    COND = r3 < 0x0;
    asm{ strd       r6, r7, [sp, #0x40 + var_40] };
    if (COND) {
            r3 = 0x0;
    }
    if (loc_ffffffff8f621bb4(s0, r0) == 0x0) goto loc_8f622edc;
    goto loc_8f622e80;

loc_8f622edc:
    if (r8 == 0x0) goto loc_8f622f3c;

loc_8f622ee4:
    s0 = r8;
    goto loc_8f622ee8;

loc_8f622f3c:
    r0 = *0x8f6c03bc;
    loc_ffffffff8f6769a4(r0);
    loc_ffffffff8f646e70();
    r0 = 0x1;
    goto loc_8f622f50;

loc_8f622ecc:
    loc_ffffffff8f656968();
    goto loc_8f622ee8;

