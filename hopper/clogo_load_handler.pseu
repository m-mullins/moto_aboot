    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x1c;
    stack[2037] = *0x8f7112f4;
    r10 = loc_ffffffff8f64f1d4(arg0);
    if (loc_ffffffff8f6539b0("clogo") != -0x1) {
            r4 = loc_ffffffff8f653b20();
            r5 = r1;
            if (loc_ffffffff8f6507a4() == 0x0) {
                    r0 = loc_ffffffff8f64b354(0x8f69b6ea);
                    r0 = loc_ffffffff8f64b470(0x8f711580, 0x8f69b6ea, r0);
                    if (r0 == 0x0) {
                            r3 = *(0x8f711580 + 0x1c);
                            r11 = r10;
                            s0 = *(0x8f711580 + 0x14);
                            r2 = *(0x8f711580 + 0x12);
                            r1 = *(0x8f711580 + 0x18);
                            s0 = (r2 | s0 * 0x10000) * (r3 >> r3 / 0x8);
                            r3 = *(0x8f711580 + 0x16);
                            r1 = r3 | r1 * 0x10000;
                            COND = r1 < 0x0;
                            s0 = s0 + 0x3 & !0x3;
                            if (!COND) {
                                    r1 = *(0x8f711580 + 0xc);
                                    r3 = *(0x8f711580 + 0xa);
                                    r2 = 0x0;
                                    r6 = *(0x8f711580 + 0x4);
                                    r0 = "clogo";
                                    r1 = r10 - (r3 | r1 * 0x10000);
                                    r3 = 0x0;
                                    asm{ strd       r6, r7, [sp, #0x40 + var_40] };
                                    r0 = loc_ffffffff8f67b018(r0, r1, r2, r3);
                                    if (r0 == 0x0) {
                                            r7 = *(0x8f711580 + 0x18);
                                            r3 = *(0x8f711580 + 0x16);
                                            r7 = (0x3f + r10 + (r3 | r7 * 0x10000) * s0 & !0x3f) + ((r3 | r7 * 0x10000) * s0 - s0);
                                            do {
                                                    r3 = r0 + 0x1;
                                                    if (r0 >= (*(0x8f711580 + 0x16) | *(0x8f711580 + 0x18) * 0x10000)) {
                                                        break;
                                                    }
                                                    loc_ffffffff8f64ac90(r7, r11, s0);
                                                    r7 = r7 - s0;
                                                    r11 = r11 + s0;
                                                    r0 = r3;
                                            } while (true);
                                            r6 = 0x8f711580;
                                            r2 = *(r6 + 0xc);
                                            r3 = *(r6 + 0xa);
                                            r8 = 0x8f6e08f8;
                                            r7 = r7 - (r3 | r2 * 0x10000);
                                            loc_ffffffff8f64ac90(r7, r10 - (r3 | r2 * 0x10000), r3 | r2 * 0x10000, r3);
                                            r2 = *(r6 + 0x18);
                                            r3 = *(r6 + 0x16);
                                            r0 = r4;
                                            r3 = 0x0 - (r3 | r2 * 0x10000);
                                            *(r7 + 0x16) = r3;
                                            asm{ ubfx       r2, r3, #0x8, #0x8 };
                                            *(r7 + 0x17) = r2;
                                            asm{ ubfx       r2, r3, #0x10, #0x8 };
                                            *(r7 + 0x18) = r2;
                                            *(r7 + 0x19) = r3 >> r3 / 0x1000000;
                                            r2 = *(r6 + 0x18);
                                            *r8 = 0x1;
                                            if (loc_ffffffff8f650ad0(r0, r5, (*(r6 + 0xa) | *(r6 + 0xc) * 0x10000) + (*(r6 + 0x16) | r2 * 0x10000) * s0, 0x0, r7) == -0x1) {
                                                    loc_ffffffff8f656968();
                                                    *0x8f6e08f8 = 0x0;
                                            }
                                    }
                            }
                            else {
                                    r3 = 0x0 - r1;
                                    *(0x8f711580 + 0x16) = r3;
                                    *(0x8f711580 + 0x18) = r2 >> r3 / 0x10000;
                                    r2 = r3 * s0;
                                    r10 = (0x3f + r10 + r2 & !0x3f) + (r1 ^ 0xffffffff) * s0;
                                    do {
                                            r0 = r0 + 0x1;
                                            r10 = r10 - s0;
                                    } while (r0 != r3);
                                    r1 = *(0x8f711580 + 0xc);
                                    r3 = *(0x8f711580 + 0xa);
                                    r2 = r2 + (r3 | r1 * 0x10000);
                                    r10 = r10 - (r3 | r1 * 0x10000);
                                    r3 = 0x0;
                                    if (loc_ffffffff8f6507a4(0x8f6e08f8, r5, r2, r3, r10) != -0x1) {
                                            r3 = 0x1;
                                    }
                                    if (!CPU_FLAGS & NE) {
                                            loc_ffffffff8f656968();
                                            r3 = 0x0;
                                    }
                                    *0x8f6e08f8 = r3;
                            }
                    }
            }
    }
    loc_ffffffff8f61ac84(0x8f6e08b8, 0x0);
    r0 = 0x0;
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

