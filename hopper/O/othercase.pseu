    r1 = arg1;
    stack[2044] = r4;
    stack[2046] = r6;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r6 = lr;
    r4 = arg0;
    r3 = *0x8f7112f4;
    stack[2043] = r3;
    if (loc_ffffffff8f64a108(arg0, r1, arg2, r3, arg0, r1, arg2, stack[2043], stack[2044], 0x8f7112f4, stack[2046], lr) == 0x0) {
            r1 = "ASSERT FAILED at (%s:%d): %s\n";
            loc_ffffffff8f6484ac(r6, r1, "lib/regex/regcomp.c", 0x401, "isalpha(ch)");
    }
    if (loc_ffffffff8f64a088(r4) != 0x0) {
            if (stack[2043] == *0x8f7112f4) {
                    r0 = loc_ffffffff8f64a234(r4);
            }
            else {
                    r0 = loc_ffffffff8f648514();
            }
    }
    else {
            if (loc_ffffffff8f64a048(r4) != 0x0) {
                    r2 = stack[2043];
                    if (r2 == *0x8f7112f4) {
                            r0 = r4;
                            sp = sp + 0x10;
                            sp = sp - 0x4 - 0x4 - 0x4 - 0x4;
                            r2 = *0x8f7112f4;
                            r2 = r2;
                            if (r0 < 0x7a) {
                                    r0 = r0 - 0x20;
                            }
                            if (r2 != *0x8f7112f4) {
                                    r0 = loc_ffffffff8f648514();
                            }
                    }
                    else {
                            r0 = loc_ffffffff8f648514();
                    }
            }
            else {
                    r0 = r4;
                    if (stack[2043] != *0x8f7112f4) {
                            r0 = loc_ffffffff8f648514();
                    }
            }
    }
    return r0;

