    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4c;
    r5 = arg0;
    r7 = arg1;
    stack[2041] = *0x8f7112f4;
    asm{ ldm        r4!, {r0, r1, r2, r3} };
    asm{ stm        ip!, {r0, r1, r2, r3} };
    asm{ ldm        r4!, {r0, r1, r2, r3} };
    asm{ stm        ip!, {r0, r1, r2, r3} };
    asm{ ldm        r4!, {r0, r1, r2, r3} };
    asm{ stm        ip!, {r0, r1, r2, r3} };
    asm{ ldm        r4, {r0, r1, r2, r3} };
    asm{ stm        ip, {r0, r1, r2, r3} };
    r3 = *r5;
    *(r3 + 0x100) = *(r3 + 0x100) & !0x60000 | 0x90000;
    r3 = *r5;
    r1 = r3 + 0x100;
    do {
    } while ((*r1 & 0x40000) != 0x0);
    r4 = 0x32;
    *(r3 + 0x100) = *(r3 + 0x100) & !0xf00000 | *(0xffffffffffffffbc + r7 * 0x4 + sp + 0x48) * 0x100000;
    r3 = *r5;
    *(r3 + 0x100) = *(r3 + 0x100) | 0x40000;
    goto loc_8f6084d8;

loc_8f6084d8:
    r2 = *r5;
    r3 = r2 + 0x100;
    if ((*(r2 + 0x100) & 0x40000) != 0x0) goto loc_8f60851c;

loc_8f6084ec:
    loc_ffffffff8f60c5a0(0x1);
    r4 = r4 - 0x1;
    COND = r4 != 0x0;
    if (COND) goto loc_8f6084d8;

loc_8f6084fc:
    loc_ffffffff8f656968(0x0 ^ 0xffffffff, "%s: clk_out_en timed out: %08x\n", "sdhci_msm_config_dll", *(*r5 + 0x100));
    r0 = 0x1;
    goto loc_8f608530;

loc_8f608530:
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f60851c:
    r0 = 0x0;
    *r3 = *r3 & !0x80000 | 0x20000;
    goto loc_8f608530;

