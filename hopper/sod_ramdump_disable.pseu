    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x1c;
    r4 = lr;
    stack[2041] = *0x8f7112f4;
    r0 = loc_ffffffff8f6359f4(arg0);
    asm{ strd       r2, r3, [sp, #0x30 + var_28] };
    r6 = r0;
    if (loc_ffffffff8f6364dc() != 0x0) {
            loc_ffffffff8f656968(0x1, "Disabling RAM dump\n");
            if (loc_ffffffff8f6356d0() == 0x0) {
                    r0 = loc_ffffffff8f634e38(r6);
                    COND = r1 != 0x0;
                    if (!CPU_FLAGS & NE) {
                            r3 = 0x0;
                            r2 = sp + 0x8;
                            loc_ffffffff8f634d98();
                            asm{ ldrd       r2, r3, [sp, #0x30 + var_28] };
                            COND = r1 != 0x0;
                            if (!COND) {
                                    r3 = 0x401;
                                    loc_ffffffff8f6484ac(r4, "ASSERT FAILED at (%s:%d): %s\n", "app/mbm/sod.c", r3, "udata_size");
                            }
                            r2 = 0x1;
                            asm{ ldrd       r2, r3, [sp, #0x30 + var_28] };
                            asm{ ldrd       r4, r5, [r6, #0x18] };
                            r0 = r4 + r2;
                            r2 = 0x1;
                            r1 = r5 + r3 + CARRY(FLAGS);
                            asm{ strd       r0, r1, [sp, #0x30 + var_28] };
                            r0 = loc_ffffffff8f634f04(r0, r1, r2);
                            if (r0 == 0x0) {
                                    r2 = 0x0;
                                    r3 = *(r6 + 0x4);
                                    asm{ ldrd       r4, r5, [r6, #0x8] };
                                    r3 = r3 & !0x21;
                                    *(r6 + 0x4) = r3;
                                    asm{ ldrd       r2, r3, [r6, #0x18] };
                                    *(r6 + 0x20) = r0;
                                    r0 = r6;
                                    r2 = r2 + r4;
                                    asm{ strd       r2, r3, [r6, #0x8] };
                                    asm{ strd       r2, r3, [r6, #0x18] };
                                    loc_ffffffff8f635198(r0);
                            }
                    }
            }
    }
    if (stack[2041] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

