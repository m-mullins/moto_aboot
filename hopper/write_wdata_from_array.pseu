    r0 = arg0;
    r7 = arg3;
    r6 = 0x8f7112f4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x18;
    r8 = arg1;
    r10 = arg2;
    r12 = sp + 0x4;
    stack[2039] = *r6;
    asm{ ldm        r4, {r0, r1, r2, r3} };
    r4 = 0x0;
    r5 = r4;
    asm{ stm        ip, {r0, r1, r2, r3} };
    r3 = r6;
    do {
            r6 = *r7;
            if (r6 >= r10) {
                break;
            }
            if (r4 == 0x10) {
                break;
            }
            r1 = *(r0 + r6);
            r2 = *(r12 + r4);
            r4 = r4 + 0x4;
            *r7 = r6 + 0x1;
            r5 = r5 |     r1;
    r2;
;
    } while (true);
    r2 = *0x8f6b8b04;
    *(r8 * 0x4 + (r2 << r2 * 0x8000) + 0x2400010) = r5;
    if (stack[2039] != *r3) {
            loc_ffffffff8f648514();
    }
    return;

