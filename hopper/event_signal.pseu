    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r6 = arg1;
    r4 = arg0;
    stack[2041] = *0x8f7112f4;
    r1 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r1 + 0x1;
    if (r1 == 0x0) {
            loc_ffffffff8f619448();
    }
    r3 = *(r4 + 0x4);
    if (r3 == 0x0) {
            r2 = *(r4 + 0x8);
            r2 = r2 & 0x1;
            COND = r2 == 0x0;
            if (!COND) {
                    if (loc_ffffffff8f61bd10() <= 0x0) {
                            r3 = 0x1;
                    }
                    if (CPU_FLAGS & LE) {
                            *(r4 + 0x4) = r3;
                    }
            }
            else {
                    *(r4 + 0x4) = 0x1;
                    loc_ffffffff8f61bdc0();
            }
    }
    r3 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r3 - 0x1;
    if (r3 == 0x1) {
            loc_ffffffff8f619438();
    }
    r0 = 0x0;
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

