    r11 = (sp - 0x4 - 0x4 - 0x4) + 0x8;
    r4 = lr;
    *(r11 + 0xffffffffffffffd8) = arg0;
    *(r11 + 0xffffffffffffffd4) = arg1;
    *(r11 + 0xfffffffffffffff0) = *0x8f7112f4;
    *(r11 + 0xffffffffffffffe0) = 0x0;
    if (*(*(r11 + 0xffffffffffffffd8) + 0x3c) != 0x0) {
            r3 = *(r11 + 0xffffffffffffffd8);
            r3 = *r3;
            r3 = r3 | 0x80000000;
    }
    else {
            r3 = *(r11 + 0xffffffffffffffd8);
            r3 = *r3;
    }
    **(r11 + 0xffffffffffffffd8) = r3;
    *(r11 + 0xffffffffffffffe4) = *(*(r11 + 0xffffffffffffffd8) + 0x14);
    if ((*(*(r11 + 0xffffffffffffffd8) + 0x4) & 0xf) >= 0x5) {
            *(r11 + 0xffffffffffffffe0) = loc_ffffffff8f64ab04(0x40, 0x28);
            r3 = *(r11 + 0xffffffffffffffe0);
            if (r3 != 0x0) {
                    r3 = 0x0;
            }
            if (CPU_FLAGS & E) {
                    r3 = 0x1;
            }
            if (zero_extend_32(r3) != 0x0) {
                    loc_ffffffff8f6484ac(r4, "ASSERT FAILED at (%s:%d): %s\n", "platform/msm_shared/scm.c", 0x402, "indir_arg");
            }
            for (*(r11 + 0xffffffffffffffe8) = 0x0; *(r11 + 0xffffffffffffffe8) <= 0x9; *(r11 + 0xffffffffffffffe8) = *(r11 + 0xffffffffffffffe8) + 0x1) {
                    r3 = *(r11 + 0xffffffffffffffe8);
                    r3 = *(r11 + 0xffffffffffffffe0) + (r3 << r3 * 0x4);
                    r0 = *(r11 + 0xffffffffffffffd8);
                    r2 = *(r11 + 0xffffffffffffffe8);
                    *r3 = *(0x4 + r0 + (r2 + 0x4 << (r2 + 0x4) * 0x4));
            }
            loc_ffffffff8f6193d4(*(r11 + 0xffffffffffffffe0), 0x40);
            *(r11 + 0xffffffffffffffe4) = *(r11 + 0xffffffffffffffe0);
    }
    *(r11 + 0xffffffffffffffec) = loc_ffffffff8f61683c(**(r11 + 0xffffffffffffffd8), *(*(r11 + 0xffffffffffffffd8) + 0x4), *(*(r11 + 0xffffffffffffffd8) + 0x8), *(*(r11 + 0xffffffffffffffd8) + 0xc), *(*(r11 + 0xffffffffffffffd8) + 0x10), *(r11 + 0xffffffffffffffe4), *(r11 + 0xffffffffffffffd4));
    if (*(r11 + 0xffffffffffffffec) != 0x0) {
            loc_ffffffff8f656968(0x0 ^ 0xffffffff, "SCM call: 0x%x failed with :%x\n", **(r11 + 0xffffffffffffffd8), *(r11 + 0xffffffffffffffec));
    }
    else {
            if (*(r11 + 0xffffffffffffffe0) != 0x0) {
                    r0 = *(r11 + 0xffffffffffffffe0);
                    loc_ffffffff8f64ab9c(r0);
            }
    }
    r0 = *0x8f7112f4;
    if (*(r11 + 0xfffffffffffffff0) != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

