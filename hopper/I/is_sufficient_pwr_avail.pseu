    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x3c;
    r6 = arg0;
    r3 = *0x8f7112f4;
    stack[2039] = r3;
    loc_ffffffff8f601fd4(arg0, arg1, arg2, r3, stack[2026]) == 0x3;
    if (CPU_FLAGS & E) goto loc_8f646a38;

loc_8f6468c8:
    r0 = loc_ffffffff8f6317c8();
    COND = r8 != 0x0;
    if (COND) goto loc_8f646a50;

loc_8f6468d4:
    r0 = loc_ffffffff8f6798a8();
    s0 = r0 - 0x1;
    r4 = r0;
    if (s0 > 0x10) goto loc_8f6469e8;

loc_8f6468ec:
    r0 = loc_ffffffff8f6797bc(r8, "bootmode", sp, r4);
    r5 = sp;
    if (r0 == 0x0) goto loc_8f646a50;

loc_8f64690c:
    r2 = sp + 0x38;
    if (*(r0 + 0xffffffffffffffc8) == 0x0) goto loc_8f646930;

loc_8f646920:
    if (r4 == 0x11) goto loc_8f646a50;

loc_8f646928:
    *(0xffffffffffffffc8 + r2 + r4) = r8;
    goto loc_8f646930;

loc_8f646930:
    stack[2039] = 0x0;
    loc_ffffffff8f64b418(sp + 0x14, "bootmode", 0x1f, 0x0, stack[2026]);
    r0 = loc_ffffffff8f64b5d8(sp + 0x14, 0x3a);
    r0 = loc_ffffffff8f646798();
    if (r0 == 0x0) {
            loc_ffffffff8f64b21c(sp + 0x14, 0x8f686ac4, 0x1f);
            loc_ffffffff8f64b21c(sp + 0x14, 0x8f67c04d, 0x1f);
            r0 = loc_ffffffff8f64b5d8(sp + 0x14, 0x3a);
            r0 = loc_ffffffff8f646798();
    }
    if (CPU_FLAGS & E) goto loc_8f6469fc;

loc_8f6469b4:
    if (loc_ffffffff8f679520(0x0, sp + 0x14, sp, r4) != 0x0) goto loc_8f646a04;

loc_8f6469d0:
    loc_ffffffff8f656968(0x0 ^ 0xffffffff, "!!! utag_validation FAIL for %s:%s\n", "bootmode", sp);
    goto loc_8f646a50;

loc_8f646a50:
    loc_ffffffff8f656968(0x1, "Battery power check, threshold = %dmV\n", r6);
    if (loc_ffffffff8f6330b0() != 0x0) {
            loc_ffffffff8f6432f0();
    }
    else {
            if (loc_ffffffff8f633290() != 0x0) {
                    loc_ffffffff8f6437b8();
            }
            else {
                    loc_ffffffff8f6464ec();
            }
    }
    r4 = loc_ffffffff8f67b3c0();
    r0 = loc_ffffffff8f656968(0x1, "batt status: %d\n", r4);
    if (r4 < r6) {
            r0 = 0x0;
    }
    if (CPU_FLAGS & NS) {
            r0 = 0x1;
    }
    goto loc_8f646ab4;

loc_8f646ab4:
    if (stack[2039] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f646a04:
    if ((r5 != 0x0) && (loc_ffffffff8f64b470(sp, "factory", 0x10) == 0x0)) {
            if (loc_ffffffff8f646664() != 0x0) {
                    loc_ffffffff8f656968();
                    r0 = 0x1;
            }
            else {
                    if (loc_ffffffff8f646540() == 0x0) {
                            loc_ffffffff8f656968(0x1, "Battery power check, threshold = %dmV\n", r6);
                            if (loc_ffffffff8f6330b0() != 0x0) {
                                    loc_ffffffff8f6432f0();
                            }
                            else {
                                    if (loc_ffffffff8f633290() != 0x0) {
                                            loc_ffffffff8f6437b8();
                                    }
                                    else {
                                            loc_ffffffff8f6464ec();
                                    }
                            }
                            r4 = loc_ffffffff8f67b3c0();
                            r0 = loc_ffffffff8f656968(0x1, "batt status: %d\n", r4);
                            if (r4 < r6) {
                                    r0 = 0x0;
                            }
                            if (CPU_FLAGS & NS) {
                                    r0 = 0x1;
                            }
                    }
                    else {
                            loc_ffffffff8f656968();
                            r0 = 0x1;
                    }
            }
    }
    else {
            loc_ffffffff8f656968(0x1, "Battery power check, threshold = %dmV\n", r6);
            if (loc_ffffffff8f6330b0() != 0x0) {
                    loc_ffffffff8f6432f0();
            }
            else {
                    if (loc_ffffffff8f633290() != 0x0) {
                            loc_ffffffff8f6437b8();
                    }
                    else {
                            loc_ffffffff8f6464ec();
                    }
            }
            r4 = loc_ffffffff8f67b3c0();
            r0 = loc_ffffffff8f656968(0x1, "batt status: %d\n", r4);
            if (r4 < r6) {
                    r0 = 0x0;
            }
            if (CPU_FLAGS & NS) {
                    r0 = 0x1;
            }
    }
    goto loc_8f646ab4;

loc_8f6469fc:
    loc_ffffffff8f656968();
    goto loc_8f646a50;

loc_8f6469e8:
    if (r0 >= 0x11) {
            loc_ffffffff8f656968();
    }
    goto loc_8f646a50;

loc_8f646a38:
    loc_ffffffff8f656968();
    r0 = 0x1;
    goto loc_8f646ab4;

