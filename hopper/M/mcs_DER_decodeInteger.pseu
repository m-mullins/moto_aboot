    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    if (r1 == 0x0) {
            r0 = 0x1;
    }
    stack[2043] = *0x8f7112f4;
    if (CPU_FLAGS & E) goto loc_8f664d78;

loc_8f664d00:
    r12 = *(r2 + 0x4);
    if (r12 == 0x0) goto loc_8f664d64;

loc_8f664d0c:
    r3 = *(r2 + 0x8);
    r3 = zero_extend_32(r3 & 0x100);
    if (r3 != 0x0) goto loc_8f664d6c;

loc_8f664d20:
    r4 = *(r2 + 0x2);
    if (r4 != 0x2) goto loc_8f664d6c;

loc_8f664d2c:
    if (r1 < 0x2) {
            r4 = r3;
    }
    if (CPU_FLAGS & A) goto loc_8f664d74;

loc_8f664d38:
    while (r3 < r1) {
            r6 = *(r0 + r3);
            r3 = zero_extend_32(r3 + 0x1);
            r4 = zero_extend_32(zero_extend_32(r4 << r4 * 0x100) + r6);
    }
    *r12 = r4;
    goto loc_8f664d64;

loc_8f664d64:
    r0 = 0x0;
    goto loc_8f664d78;

loc_8f664d78:
    *(r2 + 0x2) = r1;
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f664d74:
    r0 = r4;
    goto loc_8f664d78;

loc_8f664d6c:
    r0 = 0x4;
    goto loc_8f664d78;

