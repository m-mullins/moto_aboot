    r2 = arg2;
    stack[2041] = r4;
    stack[2042] = r5;
    stack[2044] = r7;
    stack[2045] = r8;
    stack[2046] = r10;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    s0 = arg3;
    r8 = arg0;
    r7 = arg1;
    r4 = r2;
    r5 = stack[2049];
    r3 = *0x8f7112f4;
    stack[2040] = r3;
    if (loc_ffffffff8f6672a0(arg0, arg1, r2, r3, arg0, arg1, r2, stack[2040], stack[2041], stack[2042], 0x8f7112f4, stack[2044], stack[2045], stack[2046], lr) >= 0x0) goto loc_8f665950;

loc_8f6658f0:
    r3 = r3 << r5 * 0x8;
    r2 = (r2 >> r3 / 0x4) + 0x10;
    if (r2 >= r3 / 0x2) {
            r2 = 0x0;
    }
    if (CPU_FLAGS & S) {
            r2 = 0x1;
    }
    if (r4 > 0x40) goto loc_8f665924;

loc_8f665910:
    r12 = 0x8f6663f0;
    if (r2 == 0x0) {
            r12 = 0x8f666268;
    }
    goto loc_8f665968;

loc_8f665968:
    asm{ stm        sp, {r5, sl} };
    r0 = (r12)(r8, r7, r4, s0);
    goto loc_8f665954;

loc_8f665954:
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f665924:
    if (r4 < 0x80) {
            r3 = 0x8f666470;
    }
    if (CPU_FLAGS & B) {
            r12 = 0x8f6662e8;
    }
    if (CPU_FLAGS & B) goto loc_8f665944;

loc_8f665934:
    if (r4 > 0x100) goto loc_8f665950;

loc_8f66593c:
    r3 = 0x8f6664f4;
    r12 = 0x8f666368;
    goto loc_8f665944;

loc_8f665944:
    if (r2 != 0x0) {
            r12 = r3;
    }
    goto loc_8f665968;

loc_8f665950:
    r0 = 0x39;
    goto loc_8f665954;

