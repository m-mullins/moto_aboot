    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    stack[2043] = *0x8f7112f4;
    COND = r3 < 0x0;
    if (COND) {
            r3 = r3 - 0x1;
    }
    if (CPU_FLAGS & S) {
            r3 = r3 * 0x40000000 ^ 0xffffffff;
    }
    if (CPU_FLAGS & S) {
            r3 = r3 / 0x40000000 ^ 0xffffffff;
    }
    if (CPU_FLAGS & S) {
            r3 = r3 + 0x1;
    }
    COND = r12 < 0x0;
    r3 = 0x4 - r3;
    if (COND) {
            r2 = r2 + 0x6;
    }
    if (CPU_FLAGS & NS) {
            r2 = r12;
    }
    r3 = r3 & 0x3;
    r12 = 0x0;
    r1 = r1 - r3;
    r2 = SAR(r2, r2 / 0x4);
    r4 = r12;
    r0 = r0 + r2 * 0x4;
    while (r4 < r2) {
            do {
                    if (r3 != 0x3) {
                            r6 = *(r1 + r3);
                    }
                    if (CPU_FLAGS & NE) {
                            r3 = r3 + 0x1;
                    }
                    if (CPU_FLAGS & NE) {
                            r12 = r6 | r12;
                    }
                    if (CPU_FLAGS & NE) {
                            r12 = r12 << r12 * 0x100;
                    }
            } while (CPU_FLAGS & NE);
            r3 = *(r1 + 0x3);
            r4 = r4 + 0x1;
            r1 = r1 + 0x4;
            r0 = r0 + 0xfffffffffffffffc;
            *r0 = r12 | r3;
            r3 = 0x0;
    }
    if (stack[2043] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

