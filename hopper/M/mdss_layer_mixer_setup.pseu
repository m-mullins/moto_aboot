    r1 = arg1;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r2 = *(r1 + 0x70);
    r3 = *0x8f7112f4;
    COND = r2 != 0x0;
    r2 = 0x0;
    stack[2043] = r3;
    asm{ ldmib      r0, {r3, r5} };
    if (COND) {
            r3 = r3 >> r3 / 0x2;
    }
    r0 = 0x100;
    r5 = r3 | r5 * 0x10000;
    *(0x1a45000 + 0x4) = r5;
    *0x1a45000 = r2;
    *(0x1a45000 + 0x20) = r0;
    *(0x1a45000 + 0x24) = 0xff;
    *(0x1a45000 + 0x50) = r0;
    *(0x1a45000 + 0x54) = 0xff;
    *(0x1a45000 + 0x80) = r0;
    *(0x1a45000 + 0x84) = 0xff;
    *(0x1a45000 + 0xb0) = r0;
    *(0x1a45000 + 0xb4) = 0xff;
    r3 = *(r1 + 0x1c);
    if (r3 != 0x1) {
            if (r3 == 0x2) {
                    r4 = 0x200000;
            }
            if (CPU_FLAGS & NE) {
                    r4 = 0x8;
            }
            if (CPU_FLAGS & E) {
                    r3 = 0x40000;
            }
            if (CPU_FLAGS & NE) {
                    r3 = 0x1;
            }
    }
    else {
            r4 = 0x1000;
            r3 = 0x200;
    }
    *0x1a02000 = r3;
    if (*(r1 + 0x70) != 0x0) {
            r0 = 0x100;
            *(0x1a46000 + 0x4) = r5;
            *0x1a46000 = 0x0;
            *(0x1a46000 + 0x20) = r0;
            *(0x1a46000 + 0x24) = 0xff;
            *(0x1a46000 + 0x50) = r0;
            *(0x1a46000 + 0x54) = 0xff;
            *(0x1a46000 + 0x80) = r0;
            *(0x1a46000 + 0x84) = 0xff;
            *(0x1a46000 + 0xb0) = r0;
            *(0x1a46000 + 0xb4) = 0xff;
            if (*(r1 + 0x71) != 0x0) {
                    *(0x1a02000 + 0x204) = r4;
            }
            if (CPU_FLAGS & E) {
                    *(0x1a02000 + 0x4) = r4;
            }
    }
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

