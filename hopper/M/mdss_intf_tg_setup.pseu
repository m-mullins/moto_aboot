    r1 = arg1;
    r0 = arg0;
    COND = r4 == 0x0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x1c;
    r5 = r1;
    stack[2037] = *r0;
    if (!COND) {
            r2 = *(r4 + 0x71);
            r3 = *r4;
            if (r2 != 0x0) {
                    r3 = r3 >> r3 / 0x2;
                    if (r1 == 0x1a12700) {
                            *(0x1a01000 + 0x3f0) = 0x100;
                            *(0x1a01000 + 0x2f8) = 0x100;
                            r1 = 0x1;
                            *(0x1a01000 + 0x2f4) = r1;
                    }
            }
            if (*(r4 + 0x73) != 0x0) {
                    r2 = 0x1a12700;
                    if (r5 == r2) {
                            r2 = 0x1a01000;
                    }
                    if (CPU_FLAGS & E) {
                            r1 = 0x10000;
                    }
                    if (CPU_FLAGS & E) {
                            *(r2 + 0x424) = r1;
                    }
                    if (CPU_FLAGS & E) {
                            r1 = 0x20;
                    }
                    if (CPU_FLAGS & E) {
                            *(r2 + 0x420) = r1;
                    }
            }
            if ((*(r4 + 0x74) == 0x0) || (*(r4 + 0x78) == 0x0)) {
                    *(r4 + 0x78) = 0x1;
            }
            r0 = *(r4 + 0x68);
            r0 = loc_ffffffff8f67b3c0(r3 + r0, *(r4 + 0x78));
            r3 = *(r4 + 0x4);
            r11 = *(r4 + 0x6c);
            r8 = *(r4 + 0x48);
            r7 = *(r4 + 0x4c);
            r11 = r11 + r3;
            r6 = *(r4 + 0x58);
            r10 = *(r4 + 0x54);
            r4 = *(r4 + 0x64);
            asm{ stmib      sp, {r1, r2, ip} };
            r12 = r7 + stack[2035];
            r3 = loc_ffffffff8f60e64c() + r5;
            r0 = r8 + stack[2033] + r12;
            r1 = stack[2033] + r12 - 0x1;
            r2 = r4 + (r6 + stack[2034]) * r0;
            r10 = (r10 + r11 + r6 + stack[2034]) * r0;
            r11 = (r4 - 0x1) + (r11 + r6 + stack[2034]) * r0;
            r6 = r6 * r0;
            *(r3 + 0x8) = r7 | r0 * 0x10000;
            *(r3 + 0xc) = r10;
            if (CPU_FLAGS & E) {
                    r11 = r11 - r8;
            }
            *(r3 + 0x10) = 0x0;
            *(r3 + 0x14) = r6;
            *(r3 + 0x18) = 0x0;
            *(r3 + 0x3c) = r12 | r1 * 0x10000;
            *(r3 + 0x1c) = 0x1a12500;
            *(r3 + 0x20) = 0x0;
            *(r3 + 0x24) = r11;
            *(r3 + 0x28) = 0x0;
            *(r3 + 0x40) = 0x0;
            *(r3 + 0x2c) = 0x0;
            *(r3 + 0x30) = 0x0;
            *(r3 + 0x34) = 0x0;
            *(r3 + 0x38) = 0x0;
            *(r3 + 0x48) = 0xff;
            r2 = 0x1a12500;
            if (r5 == r2) {
                    r2 = 0x212a;
            }
            if (CPU_FLAGS & NE) {
                    r2 = 0x213f;
            }
            *(r3 + 0x90) = r2;
    }
    if (stack[2037] != *r0) {
            loc_ffffffff8f648514();
    }
    return;

