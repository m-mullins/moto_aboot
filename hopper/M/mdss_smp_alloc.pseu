    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg3;
    r10 = arg2;
    r5 = 0x0;
    r8 = arg0;
    s0 = arg1;
    r0 = r5;
    stack[2040] = *0x8f7112f4;
    while (r0 + r10 < s0) {
            r6 = r0 + 0x1;
            loc_ffffffff8f67b468();
            r5 = r5 |     0x3 << 0x3 * 0x8;
    r8;
;
            loc_ffffffff8f67b468(r6, 0x3);
            if (0x3 == 0x0) {
                    *(r4 + 0x1a01080) = r5;
                    r3 = r4 + 0x1a01130;
                    r4 = r4 + 0x4;
                    *r3 = r5;
                    r5 = 0x3;
            }
            r0 = r6;
    }
    loc_ffffffff8f67b468();
    if (0x3 != 0x0) {
            *(r4 + 0x1a01080) = r5;
            *(r4 + 0x1a01130) = r5;
            r4 = r4 + 0x4;
    }
    r0 = r4;
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

