    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x14;
    stack[2037] = *0x8f7112f4;
    loc_ffffffff8f656968(0x1, "initializing GPT partition...\n");
    if (*0x8f6e131c != 0x0) {
            loc_ffffffff8f652c14();
    }
    loc_ffffffff8f64adc8(0x8f6e1400, 0x0, 0x8000);
    if (loc_ffffffff8f6507a4(0x0, 0x0, 0x8000, 0x0, 0x8f6e1400) == 0x0) goto loc_8f652d64;

loc_8f652d48:
    r7 = 0x0;
    r4 = r7;
    r0 = loc_ffffffff8f656968(0x0 ^ 0xffffffff, "Failed to read primary GPT\n");
    r6 = r7;
    goto loc_8f653388;

loc_8f653388:
    r3 = r6 ^ 0x1;
    if (r7 == 0x0) {
            r7 = 0x0;
    }
    if (CPU_FLAGS & NE) {
            r7 = r3 & 0x1;
    }
    if (r7 != 0x0) {
            r0 = loc_ffffffff8f64adc8(0x8f6e1400, 0x0, 0x8000);
    }
    if ((*r0 != 0x0) && (r4 == 0x0)) {
            loc_ffffffff8f64adc8(0x8f6e9600, r4, 0x4200);
    }
    if (r6 == 0x0) {
            loc_ffffffff8f656968(r6, "Failed to load GPT partitions\n");
            loc_ffffffff8f652c14();
            r0 = 0x0 ^ 0xffffffff;
    }
    else {
            *0x8f6e131c = 0x1;
            loc_ffffffff8f656968(0x1, "validated GPT: %d partitions\n", *0x8f6e1310, 0x8f6e1310);
            r0 = 0x0;
    }
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f652d64:
    if (!CPU_FLAGS & NE) {
            r4 = 0x8f6e1400;
            if (*(r4 + 0x1c2) != 0xee) {
                    loc_ffffffff8f656968();
                    r7 = 0x0;
                    loc_ffffffff8f656968(0x0, "Invalid protective mbr, check alternate gpt\n");
                    r6 = r7;
            }
            else {
                    loc_ffffffff8f656968(0x1, "MBR validated\n");
                    *0x8f6e1328 = r4 + 0x200;
                    r0 = loc_ffffffff8f652888(r4 + 0x200);
                    COND = r6 != 0x0;
                    if (COND) {
                            r6 = 0x1;
                    }
                    if (!CPU_FLAGS & NE) {
                            loc_ffffffff8f656968();
                    }
                    loc_ffffffff8f656968(0x1, "primary gpt validation result: %s\n");
                    r7 = 0x8f6e1800;
            }
    }
    else {
            loc_ffffffff8f656968();
            r7 = 0x0;
            loc_ffffffff8f656968(0x0, "Invalid protective mbr, check alternate gpt\n");
            r6 = r7;
    }
    r4 = *(*0x8f7125ec + 0x14);
    COND = r1 == 0x0;
    if (!CPU_FLAGS & E) {
            r2 = r4 - 0x21;
            if (loc_ffffffff8f6507a4(loc_ffffffff8f64adc8(0x8f6e9600, 0x0, 0x4200) << r2 * 0x200, 0x0 << (0x0 - 0x0 + !CARRY(FLAGS)) * 0x200 | r2 / 0x800000, 0x4200, 0x0, 0x8f6e9600) != 0x0) {
                    loc_ffffffff8f656968();
                    r4 = 0x0;
            }
            else {
                    r2 = r4 - 0x1;
                    *(0x8f6ed600) = 0x8f6e9600;
                    *0x8f6e1320 = 0x8f6ed600;
                    r0 = loc_ffffffff8f652888(0x8f6ed600);
                    COND = r4 != 0x0;
                    if (!COND) {
                            loc_ffffffff8f656968();
                    }
                    else {
                            r4 = 0x1;
                            loc_ffffffff8f656968(0x2, "alternate gpt validation result: %s\n", 0x8f6a2ccd);
                    }
            }
    }
    else {
            loc_ffffffff8f656968();
            r4 = 0x0;
    }
    r3 = zero_extend_32(r4 ^ 0x1);
    r0 = r3 & (r6 ^ 0x1);
    COND = r0 == 0x0;
    if (COND) goto loc_8f652ee4;

loc_8f652ed0:
    r0 = loc_ffffffff8f656968(0x5, "no valid gpt found!\n");
    r4 = 0x0;
    goto loc_8f65333c;

loc_8f65333c:
    r6 = r4;
    goto loc_8f653388;

loc_8f652ee4:
    r2 = r4 & r6 & 0xff;
    COND = r2 == 0x0;
    if (COND) goto loc_8f653344;

loc_8f652ef0:
    r8 = *0x8f6e1328;
    r6 = *0x8f6e1320;
    r2 = *(r8 + 0x1);
    r3 = *r8;
    r12 = *(r6 + 0x1);
    r3 = r3 | r2 * 0x100;
    r2 = *(r8 + 0x2);
    r1 = *r6;
    r3 = r3 | r2 * 0x10000;
    r2 = *(r8 + 0x3);
    r1 = r1 | r12 * 0x100;
    r12 = *(r6 + 0x2);
    r4 = r3 | r2 * 0x1000000;
    r2 = *(r8 + 0x5);
    r3 = *(r8 + 0x4);
    r1 = r1 | r12 * 0x10000;
    r12 = *(r6 + 0x3);
    r5 = r3 | r2 * 0x100 | *(r8 + 0x6) * 0x10000 | *(r8 + 0x7) * 0x1000000;
    r2 = r1 | r12 * 0x1000000;
    if (r5 == (*(r6 + 0x4) | *(r6 + 0x5) * 0x100 | *(r6 + 0x6) * 0x10000 | *(r6 + 0x7) * 0x1000000)) {
            CMP(r4, r2);
    }
    if (!CPU_FLAGS & NE) {
            r6 = *0x8f6e1320;
            if (!CPU_FLAGS & NE) {
                    r6 = *0x8f6e1320;
                    if (!CPU_FLAGS & NE) {
                            r6 = *0x8f6e1320;
                            r2 = *(r8 + 0x19);
                            r3 = *(r8 + 0x18);
                            r12 = *(r6 + 0x21);
                            r3 = r3 | r2 * 0x100;
                            r2 = *(r8 + 0x1a);
                            r1 = *(r6 + 0x20);
                            r3 = r3 | r2 * 0x10000;
                            r2 = *(r8 + 0x1b);
                            r1 = r1 | r12 * 0x100;
                            r12 = *(r6 + 0x22);
                            r4 = r3 | r2 * 0x1000000;
                            r2 = *(r8 + 0x1d);
                            r3 = *(r8 + 0x1c);
                            r1 = r1 | r12 * 0x10000;
                            r12 = *(r6 + 0x23);
                            r5 = r3 | r2 * 0x100 | *(r8 + 0x1e) * 0x10000 | *(r8 + 0x1f) * 0x1000000;
                            r2 = r1 | r12 * 0x1000000;
                            if (r5 == (*(r6 + 0x24) | *(r6 + 0x25) * 0x100 | *(r6 + 0x26) * 0x10000 | *(r6 + 0x27) * 0x1000000)) {
                                    CMP(r4, r2);
                            }
                            if (!CPU_FLAGS & NE) {
                                    r6 = *0x8f6e1320;
                                    r2 = *(r8 + 0x21);
                                    r3 = *(r8 + 0x20);
                                    r12 = *(r6 + 0x19);
                                    r3 = r3 | r2 * 0x100;
                                    r2 = *(r8 + 0x22);
                                    r1 = *(r6 + 0x18);
                                    r3 = r3 | r2 * 0x10000;
                                    r2 = *(r8 + 0x23);
                                    r1 = r1 | r12 * 0x100;
                                    r12 = *(r6 + 0x1a);
                                    r4 = r3 | r2 * 0x1000000;
                                    r2 = *(r8 + 0x25);
                                    r3 = *(r8 + 0x24);
                                    r1 = r1 | r12 * 0x10000;
                                    r12 = *(r6 + 0x1b);
                                    r5 = r3 | r2 * 0x100 | *(r8 + 0x26) * 0x10000 | *(r8 + 0x27) * 0x1000000;
                                    r2 = r1 | r12 * 0x1000000;
                                    if (r5 == (*(r6 + 0x1c) | *(r6 + 0x1d) * 0x100 | *(r6 + 0x1e) * 0x10000 | *(r6 + 0x1f) * 0x1000000)) {
                                            CMP(r4, r2);
                                    }
                                    if (!CPU_FLAGS & NE) {
                                            r6 = *0x8f6e1320;
                                            r2 = *(r8 + 0x29);
                                            r3 = *(r8 + 0x28);
                                            r12 = *(r6 + 0x29);
                                            r3 = r3 | r2 * 0x100;
                                            r2 = *(r8 + 0x2a);
                                            r1 = *(r6 + 0x28);
                                            r3 = r3 | r2 * 0x10000;
                                            r2 = *(r8 + 0x2b);
                                            r1 = r1 | r12 * 0x100;
                                            r12 = *(r6 + 0x2a);
                                            r4 = r3 | r2 * 0x1000000;
                                            r2 = *(r8 + 0x2d);
                                            r3 = *(r8 + 0x2c);
                                            r1 = r1 | r12 * 0x10000;
                                            r12 = *(r6 + 0x2b);
                                            r5 = r3 | r2 * 0x100 | *(r8 + 0x2e) * 0x10000 | *(r8 + 0x2f) * 0x1000000;
                                            r2 = r1 | r12 * 0x1000000;
                                            if (r5 == (*(r6 + 0x2c) | *(r6 + 0x2d) * 0x100 | *(r6 + 0x2e) * 0x10000 | *(r6 + 0x2f) * 0x1000000)) {
                                                    CMP(r4, r2);
                                            }
                                            if (!CPU_FLAGS & NE) {
                                                    r6 = *0x8f6e1320;
                                                    r2 = *(r8 + 0x31);
                                                    r3 = *(r8 + 0x30);
                                                    r12 = *(r6 + 0x31);
                                                    r3 = r3 | r2 * 0x100;
                                                    r2 = *(r8 + 0x32);
                                                    r1 = *(r6 + 0x30);
                                                    r3 = r3 | r2 * 0x10000;
                                                    r2 = *(r8 + 0x33);
                                                    r1 = r1 | r12 * 0x100;
                                                    r12 = *(r6 + 0x32);
                                                    r4 = r3 | r2 * 0x1000000;
                                                    r2 = *(r8 + 0x35);
                                                    r3 = *(r8 + 0x34);
                                                    r1 = r1 | r12 * 0x10000;
                                                    r12 = *(r6 + 0x33);
                                                    r5 = r3 | r2 * 0x100 | *(r8 + 0x36) * 0x10000 | *(r8 + 0x37) * 0x1000000;
                                                    r2 = r1 | r12 * 0x1000000;
                                                    if (r5 == (*(r6 + 0x34) | *(r6 + 0x35) * 0x100 | *(r6 + 0x36) * 0x10000 | *(r6 + 0x37) * 0x1000000)) {
                                                            CMP(r4, r2);
                                                    }
                                                    if ((!CPU_FLAGS & NE) && (!CPU_FLAGS & NE)) {
                                                            r6 = *0x8f6e1320;
                                                            if (!CPU_FLAGS & NE) {
                                                                    r6 = *0x8f6e1320;
                                                                    if (!CPU_FLAGS & NE) {
                                                                            r6 = *0x8f6e1320;
                                                                    }
                                                            }
                                                    }
                                            }
                                    }
                            }
                    }
            }
    }
    r0 = loc_ffffffff8f656968();
    r4 = 0x1;
    *0x8f6e1318 = r7;
    r3 = *0x8f6e1328;
    *0x8f6e1310 = *(r3 + 0x50) | *(r3 + 0x51) * 0x100 | *(r3 + 0x52) * 0x10000 | *(r3 + 0x53) * 0x1000000;
    goto loc_8f65333c;

loc_8f653344:
    if ((r3 & r6) != 0x0) {
            r4 = r2;
            r6 = 0x1;
            *0x8f6e1318 = r7;
            r3 = *0x8f6e1328;
            r0 = *(r3 + 0x51);
            r1 = *(r3 + 0x50);
            r1 = r1 | r0 * 0x100;
            r0 = *(r3 + 0x52);
            *0x8f6e1310 = r1 | r0 * 0x10000 | *(r3 + 0x53) * 0x1000000;
    }
    goto loc_8f653388;

