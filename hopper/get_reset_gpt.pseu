    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r8 = r0;
    stack[2040] = *r0;
    if (*0x8f6e131c != 0x0) goto loc_8f65498c;

loc_8f65497c:
    loc_ffffffff8f656968(*0x8f6e131c, "GPT not initialized\n");
    goto loc_8f6549a0;

loc_8f6549a0:
    r0 = 0x0 ^ 0xffffffff;
    goto loc_8f654bb0;

loc_8f654bb0:
    if (stack[2040] != *r0) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f65498c:
    if (r0 != 0x0) goto loc_8f6549a8;

loc_8f654994:
    loc_ffffffff8f656968();
    goto loc_8f6549a0;

loc_8f6549a8:
    loc_ffffffff8f64ac90();
    r12 = *(r8 + 0x251);
    *(r8 + 0x210) = 0x0;
    *(r8 + 0x211) = 0x0;
    r10 = r8 + 0x200;
    *(r8 + 0x212) = 0x0;
    *(r8 + 0x213) = 0x0;
    *(r8 + 0x220) = 0x0;
    *(r8 + 0x221) = 0x0;
    *(r8 + 0x222) = 0x0;
    *(r8 + 0x223) = 0x0;
    *(r8 + 0x224) = 0x0;
    *(r8 + 0x225) = 0x0;
    *(r8 + 0x226) = 0x0;
    *(r8 + 0x227) = 0x0;
    *(r8 + 0x230) = 0x0;
    *(r8 + 0x231) = 0x0;
    *(r8 + 0x232) = 0x0;
    *(r8 + 0x233) = 0x0;
    *(r8 + 0x234) = 0x0;
    *(r8 + 0x235) = 0x0;
    *(r8 + 0x236) = 0x0;
    *(r8 + 0x237) = 0x0;
    *(r8 + 0x258) = 0x0;
    *(r8 + 0x259) = 0x0;
    *(r8 + 0x25a) = 0x0;
    *(r8 + 0x25b) = 0x0;
    r12 = *(r8 + 0x250) | r12 * 0x100;
    r12 = r12 | *(r8 + 0x252) * 0x10000;
    r12 = r12 | *(r8 + 0x253) * 0x1000000;
    r2 = r12 - 0x1;
    r3 = r8 + (r12 + 0x7) * 0x80;
    goto loc_8f654a48;

loc_8f654a48:
    if (r2 < 0x0) goto loc_8f654b24;

loc_8f654a50:
    r4 = *(r3 + 0x20) | *(r3 + 0x21) * 0x100 | *(r3 + 0x22) * 0x10000 | *(r3 + 0x23) * 0x1000000;
    r5 = *(r3 + 0x24) | *(r3 + 0x25) * 0x100 | *(r3 + 0x26) * 0x10000 | *(r3 + 0x27) * 0x1000000;
    COND = r0 == 0x0;
    if (COND) goto loc_8f654b18;

loc_8f654a90:
    r6 = *(r3 + 0x28) | *(r3 + 0x29) * 0x100 | *(r3 + 0x2a) * 0x10000 | *(r3 + 0x2b) * 0x1000000;
    if ((*(r3 + 0x2c) | *(r3 + 0x2d) * 0x100 | *(r3 + 0x2e) * 0x10000 | *(r3 + 0x2f) * 0x1000000) == r5) {
            CMP(r6, r4);
    }
    if (CPU_FLAGS & B) goto loc_8f654b18;

loc_8f654ad4:
    r4 = r4 - 0x1;
    *(r3 + 0x28) = r4;
    r5 = r5 - 0x0 + !CARRY(FLAGS);
    asm{ ubfx       r2, r4, #0x8, #0x8 };
    *(r3 + 0x2c) = r5;
    *(r3 + 0x29) = r2;
    asm{ ubfx       r2, r4, #0x10, #0x8 };
    *(r3 + 0x2a) = r2;
    r2 = r2 >> r4 / 0x1000000;
    *(r3 + 0x2b) = r2;
    asm{ ubfx       r2, r5, #0x8, #0x8 };
    *(r3 + 0x2d) = r2;
    asm{ ubfx       r2, r5, #0x10, #0x8 };
    *(r3 + 0x2e) = r2;
    *(r3 + 0x2f) = r2 >> r5 / 0x1000000;
    goto loc_8f654b24;

loc_8f654b24:
    r2 = *(r8 + 0x255);
    r2 = *(r8 + 0x254) | r2 * 0x100;
    r2 = r2 | *(r8 + 0x256) * 0x10000;
    r3 = *(r8 + 0x257);
    r0 = loc_ffffffff8f67b2cc(0x0);
    r2 = *(r8 + 0x20d);
    r1 = r10;
    asm{ ubfx       r3, r0, #0x8, #0x8 };
    *(r8 + 0x259) = r3;
    asm{ ubfx       r3, r0, #0x10, #0x8 };
    *(r8 + 0x25a) = r3;
    r3 = *(r8 + 0x20c);
    *(r8 + 0x258) = r0;
    r3 = r3 | r2 * 0x100;
    r2 = *(r8 + 0x20e);
    *(r8 + 0x25b) = r0 >> r0 / 0x1000000;
    r3 = r3 | r2 * 0x10000;
    r0 = loc_ffffffff8f67b2cc(0x0, r1, r3 | *(r8 + 0x20f) * 0x1000000, r3);
    asm{ ubfx       r3, r0, #0x8, #0x8 };
    *(r8 + 0x210) = r0;
    *(r8 + 0x211) = r3;
    asm{ ubfx       r3, r0, #0x10, #0x8 };
    *(r8 + 0x213) = r0 >> r0 / 0x1000000;
    r0 = 0x0;
    *(r8 + 0x212) = r3;
    goto loc_8f654bb0;

loc_8f654b18:
    r2 = r2 - 0x1;
    r3 = r3 - 0x80;
    goto loc_8f654a48;

