    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x18;
    r4 = r0;
    r1 = *(r0 + 0x8);
    stack[2043] = *0x8f7112f4;
    if (*0x8f7114ac != r1) {
            r0 = lr;
            asm{ stmib      sp, {r1, ip} };
            loc_ffffffff8f6484ac(r0, "mutex_release: thread %p (%s) tried to release mutex %p it doesn't own. owned by %p (%s)\n");
    }
    r2 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r2 + 0x1;
    if (r2 == 0x0) {
            loc_ffffffff8f619448();
    }
    r3 = *(r4 + 0x4);
    *(r4 + 0x8) = 0x0;
    *(r4 + 0x4) = r3 - 0x1;
    if (r3 > 0x1) {
            loc_ffffffff8f61bd10(r4 + 0xc, 0x1);
    }
    r3 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r3 - 0x1;
    if (r3 == 0x1) {
            loc_ffffffff8f619438();
    }
    r0 = 0x0;
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

