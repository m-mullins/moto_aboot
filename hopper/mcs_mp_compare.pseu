    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r3 = *0x8f7112f4;
    r0 = *(arg0 + 0x4);
    stack[2043] = r3;
    r1 = arg1 + (sign_extend_32(r0) - 0xc0000001 << (sign_extend_32(r0) - 0xc0000001) * 0x4);
    r2 = arg2 + (sign_extend_32(r0) - 0xc0000001 << (sign_extend_32(r0) - 0xc0000001) * 0x4);
    r3 = 0x0;
    goto loc_8f66a9ec;

loc_8f66a9ec:
    if (*(r1 + r3) < *(r2 + r3)) goto loc_8f66aa18;

loc_8f66a9fc:
    if (CPU_FLAGS & A) goto loc_8f66aa20;

loc_8f66aa00:
    r3 = r3 - 0x4;
    r0 = zero_extend_32(r0 - 0x1);
    if (r0 != 0x0) goto loc_8f66a9ec;

loc_8f66aa24:
    r0 = sign_extend_32(r0);
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f66aa20:
    r0 = 0x1;
    goto loc_8f66aa24;

loc_8f66aa18:
    r0 = 0xffff;
    goto loc_8f66aa24;

