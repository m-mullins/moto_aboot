    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x19c;
    r4 = sp + 0x94;
    r3 = *0x8f7112f4;
    stack[2041] = r3;
    loc_ffffffff8f64adc8(sp + 0x14, 0x0, 0x80, r3, stack[1940]);
    loc_ffffffff8f64adc8(r4, 0x0, 0x20);
    loc_ffffffff8f64b418(r4, "2016_06_23+18:11:44", 0x1f);
    r0 = loc_ffffffff8f64b354(r4);
    for (r3 = 0x0; r3 != r0; r3 = r3 + 0x1) {
            r2 = *(r4 + r3);
            if (r2 == 0x5f) {
                    *(r4 + r3) = 0x2d;
            }
            if ((!CPU_FLAGS & E) && (r2 == 0x2b)) {
                    *(r4 + r3) = 0x20;
            }
    }
    r0 = loc_ffffffff8f651958();
    if (r0 != 0x0) {
            r0 = 0x8f6a4e20;
    }
    if (CPU_FLAGS & E) {
            r0 = 0x8f688a46;
    }
    loc_ffffffff8f64a9f0(sp + 0x14);
    loc_ffffffff8f63d06c(0x1);
    loc_ffffffff8f64f890();
    r0 = loc_ffffffff8f63d06c(0x1);
    loc_ffffffff8f64f730(sp + 0x14, r0, 0x0, 0xff000000 ^ 0xffffffff);
    loc_ffffffff8f62cffc(r4);
    loc_ffffffff8f64a9f0(sp + 0x14, 0x7f, "Baseband: %s", r4);
    loc_ffffffff8f63d06c(0x2);
    loc_ffffffff8f64f890();
    r0 = loc_ffffffff8f63d06c(0x2);
    loc_ffffffff8f64f730(sp + 0x14, r0, 0x0, 0xff000000 ^ 0xffffffff);
    loc_ffffffff8f61eafc(r4, 0x18);
    if (loc_ffffffff8f64b354(r4) == 0x0) {
            r0 = loc_ffffffff8f61a57c();
            loc_ffffffff8f64a9f0(r4, 0x18, "radio%d", r0);
    }
    r6 = 0x8f7112f4;
    stack[1940] = 0x4;
    r0 = loc_ffffffff8f6314ac();
    r5 = r0;
    r0 = loc_ffffffff8f63192c();
    r3 = r5;
    r1 = 0x7f;
    r2 = "Product/Variant: %s %s %uGB %s";
    r5 = 0x0;
    asm{ stm        sp, {r4, r7} };
    loc_ffffffff8f64a9f0(sp + 0x14, r1, r2, r3, stack[1940]);
    loc_ffffffff8f63d06c(0x3);
    loc_ffffffff8f64f890();
    r0 = loc_ffffffff8f63d06c(0x3);
    loc_ffffffff8f64f730(sp + 0x14, r0, 0x0, 0xff000000 ^ 0xffffffff);
    loc_ffffffff8f60077c(r4);
    loc_ffffffff8f64a9f0(sp + 0x14, 0x7f, "Serial Number: %s\n", r4);
    loc_ffffffff8f63d06c(0x4);
    loc_ffffffff8f64f890();
    r0 = loc_ffffffff8f63d06c(0x4);
    r0 = loc_ffffffff8f64f730(sp + 0x14, r0, r5, 0xff000000 ^ 0xffffffff);
    if (stack[2041] != *r6) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

