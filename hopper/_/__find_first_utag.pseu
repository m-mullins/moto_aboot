    stack[2044] = r6;
    stack[2045] = r7;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r6 = arg0;
    r7 = arg1;
    r3 = *0x8f7112f4;
    stack[2040] = r3;
    r0 = loc_ffffffff8f6788e4(arg0, arg1, arg2, r3, arg0, stack[2040], arg2, r4, r5, stack[2044], stack[2045], 0x8f7112f4, lr);
    r4 = *(r0 + 0x10);
    r5 = r0;
    if ((r4 == 0x0) || (loc_ffffffff8f678804(r7, r4) == 0x0)) goto loc_8f679210;

loc_8f6792bc:
    r0 = r4;
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f679210:
    if (*(r5 + 0xc) == 0x0) goto loc_8f67923c;

loc_8f67921c:
    r3 = *0x8f6ac0f0;
    *0x8f6ac0f0 = r3 + 0x1;
    if (r3 == 0x0) {
            loc_ffffffff8f619448();
    }
    r4 = *(*(r5 + 0xc) + 0x30);
    if (r4 == 0x0) goto loc_8f6792a4;

loc_8f679264:
    s0 = *(r4 + 0x30);
    if (s0 == 0x0) goto loc_8f6792a4;

loc_8f679270:
    if (loc_ffffffff8f678804(r7, r4) == 0x0) {
            r4 = s0;
    }
    if (CPU_FLAGS & E) goto loc_8f679264;

loc_8f679288:
    r3 = *0x8f6ac0f0;
    *(r5 + 0x10) = r4;
    *0x8f6ac0f0 = r3 - 0x1;
    if (r3 == 0x1) {
            loc_ffffffff8f619438();
    }
    goto loc_8f6792bc;

loc_8f6792a4:
    r4 = *0x8f6ac0f0;
    r4 = r4 - 0x1;
    *0x8f6ac0f0 = r4;
    if (r4 == 0x0) {
            loc_ffffffff8f619438();
    }
    else {
            r4 = 0x0;
    }
    goto loc_8f6792bc;

loc_8f67923c:
    if (loc_ffffffff8f679074(r6) == 0x0) goto loc_8f67921c;

loc_8f67924c:
    r4 = 0x0;
    goto loc_8f6792bc;

