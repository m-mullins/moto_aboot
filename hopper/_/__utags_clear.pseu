    stack[2044] = r6;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r6 = arg0;
    r3 = *0x8f7112f4;
    stack[2041] = r3;
    r0 = loc_ffffffff8f6788e4(arg0, arg1, arg2, r3, arg0, stack[2041], r4, r5, stack[2044], r7, 0x8f7112f4, lr);
    r5 = r0;
    if (*(r0 + 0xc) != 0x0) {
            r7 = r5 + 0x14;
            loc_ffffffff8f61afc0(r7);
            r6 = *(r5 + 0xc);
            for (r4 = *(r6 + 0x30); r4 != 0x0; r4 = *(r4 + 0x30)) {
                    r3 = *(r4 + 0x30);
                    if (r3 == 0x0) {
                        break;
                    }
                    r2 = *(r4 + 0x24);
                    r2 = r2 & 0x1;
                    COND = r2 == 0x0;
                    if (COND) {
                            r1 = *(r5 + 0x10);
                            r0 = *(r4 + 0x2c);
                            if (r1 == r4) {
                                    *(r5 + 0x10) = r2;
                            }
                            *(r6 + 0x30) = r3;
                            if (r0 != 0x0) {
                                    loc_ffffffff8f64ab9c();
                            }
                            r0 = r4;
                            r4 = r6;
                            loc_ffffffff8f64ab9c(r0);
                    }
                    r6 = r4;
            }
            loc_ffffffff8f61b098(r7);
            r0 = 0x0;
    }
    else {
            r0 = loc_ffffffff8f679074(r6);
            if (r0 == 0x0) {
                    r7 = r5 + 0x14;
                    loc_ffffffff8f61afc0(r7);
                    r6 = *(r5 + 0xc);
                    for (r4 = *(r6 + 0x30); r4 != 0x0; r4 = *(r4 + 0x30)) {
                            r3 = *(r4 + 0x30);
                            if (r3 == 0x0) {
                                break;
                            }
                            r2 = *(r4 + 0x24);
                            r2 = r2 & 0x1;
                            COND = r2 == 0x0;
                            if (COND) {
                                    r1 = *(r5 + 0x10);
                                    r0 = *(r4 + 0x2c);
                                    if (r1 == r4) {
                                            *(r5 + 0x10) = r2;
                                    }
                                    *(r6 + 0x30) = r3;
                                    if (r0 != 0x0) {
                                            loc_ffffffff8f64ab9c();
                                    }
                                    r0 = r4;
                                    r4 = r6;
                                    loc_ffffffff8f64ab9c(r0);
                            }
                            r6 = r4;
                    }
                    loc_ffffffff8f61b098(r7);
                    r0 = 0x0;
            }
    }
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

