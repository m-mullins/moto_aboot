    s0 = arg3;
    r5 = 0x8f7112f4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x14;
    r4 = arg0;
    r8 = arg1;
    r11 = arg2;
    r10 = arg4;
    r3 = *r5;
    stack[2037] = r3;
    r0 = loc_ffffffff8f64bb48(arg0, arg1, arg2, r3, stack[2034]);
    COND = r7 < 0x0;
    if (COND) {
            r5 = r7;
    }
    if (CPU_FLAGS & L) goto loc_8f64cba0;

loc_8f64c9d4:
    r5 = loc_ffffffff8f64c774(*(r4 + 0xc));
    r6 = loc_ffffffff8f64b354(r11) + 0x1;
    r0 = *(r4 + 0x20);
    r0 = loc_ffffffff8f64c774(r0);
    stack[2034] = r0;
    r0 = loc_ffffffff8f64c874(r4, r4 + r0 + r5, 0x0, r6, stack[2034]);
    r12 = stack[2034];
    if (r0 != 0x0) {
            r5 = r0;
    }
    if (!CPU_FLAGS & NE) {
            *(r4 + 0x20) = loc_ffffffff8f64c774(loc_ffffffff8f64c774(*(r4 + 0x20)) + r6);
            loc_ffffffff8f64ac90(r12 + r4 + r5, r11, r6);
            r5 = r12 + r4 + r5 - r4 + r5;
    }
    if (r5 < 0x0) goto loc_8f64cba0;

loc_8f64ca64:
    r0 = loc_ffffffff8f64c394(r4, r8, "mmi,reserve", sp + 0x8);
    r11 = s0 + 0x3;
    COND = r8 == 0x0;
    if (COND) goto loc_8f64cb44;

loc_8f64ca84:
    r2 = stack[2036];
    r6 = (r11 & !0x3) + 0xc;
    stack[2035] = r11 & !0x3;
    if (r2 < r6) goto loc_8f64cac0;

loc_8f64ca9c:
    r7 = (r2 + 0xc - r6) + r7;
    *(r8 + 0x4) = loc_ffffffff8f64c774(r2 - r6);
    goto loc_8f64cb04;

loc_8f64cb04:
    r7 = r7 + loc_ffffffff8f64c774(*(r4 + 0x8));
    *r10 = r4 + r7;
    *(r4 + r7) = loc_ffffffff8f64c774(0x3);
    r5 = 0x0;
    *(0x8 + r4 + r7) = loc_ffffffff8f64c774(0x0);
    *(0x4 + r4 + r7) = loc_ffffffff8f64c774(s0);
    goto loc_8f64cba0;

loc_8f64cba0:
    r0 = r5;
    if (stack[2037] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f64cac0:
    r11 = r6 + 0xff & !0xff;
    r0 = loc_ffffffff8f64c924(r4, r8 + 0xc, r2 + 0x3 & !0x3, r11);
    if (r0 != 0x0) {
            r5 = r0;
    }
    if (CPU_FLAGS & NE) goto loc_8f64cba0;

loc_8f64caec:
    r7 = (r11 - stack[2035]) + r7;
    *(r8 + 0x4) = loc_ffffffff8f64c774(r11 - r6);
    goto loc_8f64cb04;

loc_8f64cb44:
    r0 = *(r4 + 0x8);
    r0 = loc_ffffffff8f64c774(r0);
    *r10 = r4 + r0 + r7;
    r0 = loc_ffffffff8f64c924(r4, r4 + r0 + r7, r8, (r11 & !0x3) + 0xc);
    COND = r6 != 0x0;
    if (!COND) {
            r4 = *r10;
            *r4 = loc_ffffffff8f64c774(0x3);
            *(r4 + 0x8) = loc_ffffffff8f64c774(r5);
            *(r4 + 0x4) = loc_ffffffff8f64c774(s0);
    }
    r5 = r6;
    goto loc_8f64cba0;

