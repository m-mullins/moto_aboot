    stack[2044] = r5;
    stack[2045] = r6;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r5 = arg1;
    r6 = arg0;
    r3 = *0x8f7112f4;
    stack[2041] = r3;
    r4 = loc_ffffffff8f606df8(arg0, arg1, arg2, r3, arg0, stack[2041], arg2, r4, stack[2044], stack[2045], 0x8f7112f4, lr);
    if (r5 >= 0x20) {
            r0 = 0x10;
    }
    else {
            loc_ffffffff8f64adc8();
            loc_ffffffff8f606d48(0xa, r4, r5);
            loc_ffffffff8f606ce8(r4, r5);
            loc_ffffffff8f64adc8(r6, 0x0, r5);
            loc_ffffffff8f64ac90(r6, r4, 0x4);
            r0 = *r4;
            if (r0 != 0x0) {
                    r0 = 0x0;
            }
            if ((!CPU_FLAGS & NE) && (*(r4 + 0x2) == 0x0)) {
                    r0 = 0x10;
            }
    }
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

