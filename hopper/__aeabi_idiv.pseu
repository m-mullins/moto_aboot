    r1 = arg1;
    r0 = arg0;
    r12 = r0 ^ r1;
    if (CPU_FLAGS & S) {
            r1 = 0x0 - r1;
    }
    COND = r2 == 0x0;
    if (!COND) {
            COND = r3 < 0x0;
            if (COND) {
                    r3 = 0x0 - r0;
            }
            if (r3 >= r1) {
                    if ((r1 & r2) != 0x0) {
                            r0 = 0x0;
                            asm{ clz        r2, r1 };
                            asm{ clz        r0, r3 };
                            r1 = r1 << r2 - r0;
                            r2 = 0x1 << r2 - r0;
                            r0 = 0x0;
                            do {
                                    if (r3 >= r1) {
                                            r3 = r3 - r1;
                                    }
                                    if (CPU_FLAGS & NS) {
                                            r0 = r0 | r2;
                                    }
                                    if (r3 >= r1 / 0x2) {
                                            r3 = r3 - r1 / 0x2;
                                    }
                                    if (CPU_FLAGS & NS) {
                                            r0 = r0 | r2 / 0x2;
                                    }
                                    if (r3 >= r1 / 0x4) {
                                            r3 = r3 - r1 / 0x4;
                                    }
                                    if (CPU_FLAGS & NS) {
                                            r0 = r0 | r2 / 0x4;
                                    }
                                    if (r3 >= r1 / 0x8) {
                                            r3 = r3 - r1 / 0x8;
                                    }
                                    if (CPU_FLAGS & NS) {
                                            r0 = r0 | r2 / 0x8;
                                    }
                                    if (r3 != 0x0) {
                                            r2 = r2 >> r2 / 0x10;
                                    }
                                    if (CPU_FLAGS & NE) {
                                            r1 = r1 >> r1 / 0x10;
                                    }
                            } while (CPU_FLAGS & NE);
                            if (r12 < 0x0) {
                                    r0 = 0x0 - r0;
                            }
                    }
                    else {
                            asm{ clz        r2, r1 };
                            r0 = r3 >> 0x1f - r2;
                            if (r12 < 0x0) {
                                    r0 = 0x0 - r0;
                            }
                    }
            }
            else {
                    if (CPU_FLAGS & S) {
                            r0 = 0x0;
                    }
                    if (CPU_FLAGS & E) {
                            r0 = SAR(r0, r12 / 0x80000000);
                    }
                    if (CPU_FLAGS & E) {
                            r0 = r0 | 0x1;
                    }
            }
    }
    else {
            if (TEST(r12 ^ r0)) {
                    r0 = 0x0 - r0;
            }
    }
    return r0;

