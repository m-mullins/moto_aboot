    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r5 = arg0;
    r6 = arg1;
    stack[2043] = *0x8f7112f4;
    r0 = loc_ffffffff8f663dc4(arg0, arg1);
    if (r0 > -0xe0000001) {
            r0 = 0x0 ^ 0xffffffff;
    }
    if ((!CPU_FLAGS & A) && (r0 != 0x0)) {
            r3 = *(r5 + (r6 - r0));
            if ((r3 & 0x80) != 0x0) {
                    r0 = r0 << r0 * 0x8;
            }
            if (!CPU_FLAGS & NE) {
                    r0 = r0 - 0xe0000001 << (r0 - 0xe0000001) * 0x8;
                    do {
                            r3 = r3 >> r3 / 0x2;
                            COND = r3 != 0x0;
                            r0 = r0 + 0x1;
                    } while (COND);
            }
    }
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

