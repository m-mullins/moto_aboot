    stack[2045] = r4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg0;
    r3 = *0x8f7112f4;
    stack[2043] = r3;
    r0 = loc_ffffffff8f674cc4(arg0, arg1, arg2, r3, arg0, stack[2043], arg2, stack[2045], 0x8f7112f4, lr);
    if (zero_extend_32(r0 - 0x1) >= 0x1) {
            if (r0 == 0x3) {
                    r0 = r4;
            }
            if (!CPU_FLAGS & E) {
                    COND = r0 == 0x6;
            }
    }
    else {
            COND = r0 == 0x1;
    }
    loc_ffffffff8f64b2c0();
    r0 = 0x1;
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

