    stack[2045] = r4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg0;
    r3 = *0x8f7112f4;
    stack[2043] = r3;
    r0 = loc_ffffffff8f62ce94(0x8f6884cb, r4, 0x100, r3, arg0, stack[2043], arg2, stack[2045], 0x8f7112f4, lr);
    if (r0 > 0x0) {
            r0 = 0x1;
    }
    if (!CPU_FLAGS & G) {
            r0 = loc_ffffffff8f62cc64(0x8f6884cb, r4, 0x100);
            r0 = r0 + 0x0;
            COND = r0 != 0x0;
            if (COND) {
                    r0 = 0x1;
            }
    }
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

