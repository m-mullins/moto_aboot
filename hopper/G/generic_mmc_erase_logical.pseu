    r3 = arg3;
    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x2c;
    r12 = 0x8f7112f4;
    r10 = 0x8f7125ec;
    r4 = r0;
    r5 = r1;
    asm{ strd       r2, r3, [sp, #0x50 + var_38] };
    r6 = *r12;
    r8 = *r10;
    stack[2037] = r6;
    s0 = s0 << *(r8 + 0x2c) * 0x200;
    asm{ strd       r6, r7, [sp, #0x50 + var_40] };
    r6 = r2;
    r7 = r6 | r3;
    COND = r7 != 0x0;
    if (COND) goto loc_8f650fe8;

loc_8f651128:
    if (stack[2037] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

loc_8f650fe8:
    asm{ ldrd       r6, r7, [sp, #0x50 + var_38] };
    asm{ ldrd       r8, sb, [r8, #0x20] };
    r6 = r6 + r0;
    r7 = r7 + r1 + CARRY(FLAGS);
    if (r7 == s0) {
            CMP(r6, r8);
    }
    if (CPU_FLAGS & B) goto loc_8f651028;

loc_8f651004:
    r0 = 0x1;
    asm{ strd       r6, r7, [sp, #0x50 + var_50] };
    asm{ strd       r8, sb, [sp, #0x50 + var_48] };
    loc_ffffffff8f656968(r0, "Invalid logical range: start=%llu, end=%llu, total=%llu\n", r4, r5);
    goto loc_8f651128;

loc_8f651028:
    asm{ ldrd       r8, sb, [sp, #0x50 + var_38] };
    asm{ ldrd       sl, fp, [sp, #0x50 + var_40] };
    if (s0 == r11) {
            CMP(r8, 0x8f7125ec);
    }
    if (CPU_FLAGS & NB) goto loc_8f651058;

loc_8f65103c:
    if (stack[2037] == *r12) {
            loc_ffffffff8f650e80();
    }
    else {
            loc_ffffffff8f648514();
    }
    return;

loc_8f651058:
    asm{ ldrd       r2, r3, [sp, #0x50 + var_40] };
    loc_ffffffff8f67b5cc();
    COND = r11 == 0x0;
    if (COND) goto loc_8f651098;

loc_8f651068:
    asm{ ldrd       r8, sb, [sp, #0x50 + var_40] };
    r8 = r8 - r2;
    s0 = s0 - r3 + !CARRY(FLAGS);
    r2 = r8;
    r3 = s0;
    if (loc_ffffffff8f650e80(r4, r5, r2, r3) != 0x0) goto loc_8f651128;

loc_8f651090:
    r4 = r4 + r8;
    r5 = r5 + s0 + CARRY(FLAGS);
    goto loc_8f651098;

loc_8f651098:
    r0 = r6;
    r1 = r7;
    asm{ ldrd       r2, r3, [sp, #0x50 + var_40] };
    loc_ffffffff8f67b5cc(r0, r1);
    r0 = r2;
    r1 = r3;
    COND = r12 == 0x0;
    if (!COND) {
            r6 = r6 - r0;
            r7 = r7 - r1 + !CARRY(FLAGS);
            if (loc_ffffffff8f650e80(r6, r7) == 0x0) {
                    r2 = r6;
                    r3 = r7;
                    asm{ ldrd       r8, sb, [sp, #0x50 + var_40] };
                    r2 = r2 - r4;
                    r3 = r3 - r5 + !CARRY(FLAGS);
                    if (r7 == r5) {
                            CMP(r6, r4);
                    }
                    if (r3 == s0) {
                            CMP(r2, r8);
                    }
                    if (!CPU_FLAGS & B) {
                            if (r7 == r5) {
                                    CMP(r6, r4);
                            }
                            if (!CPU_FLAGS & B) {
                                    (*(*r4 + 0x40))(r4, r5);
                            }
                    }
            }
    }
    else {
            r2 = r6;
            r3 = r7;
            asm{ ldrd       r8, sb, [sp, #0x50 + var_40] };
            r2 = r2 - r4;
            r3 = r3 - r5 + !CARRY(FLAGS);
            if (r7 == r5) {
                    CMP(r6, r4);
            }
            if (r3 == s0) {
                    CMP(r2, r8);
            }
            if (!CPU_FLAGS & B) {
                    if (r7 == r5) {
                            CMP(r6, r4);
                    }
                    if (!CPU_FLAGS & B) {
                            (*(*r4 + 0x40))(r4, r5);
                    }
            }
    }
    goto loc_8f651128;

