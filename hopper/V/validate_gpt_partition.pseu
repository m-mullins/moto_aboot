    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r3 = *0x8f7112f4;
    stack[2040] = r3;
    r5 = loc_ffffffff8f67305c("primary_gpt", arg1, arg2, r3, arg0, arg1, arg2, stack[2040], r4, r5, r6, r7, 0x8f7112f4, r10, lr);
    r0 = loc_ffffffff8f673228();
    COND = r7 == 0x0;
    if (!CPU_FLAGS & E) {
            if (r5 == 0x0) {
                    loc_ffffffff8f656968(r5, "Failed to get policy executor for GPT\n");
            }
            loc_ffffffff8f64adc8(0x90000000, 0x0, 0x8000);
            r0 = loc_ffffffff8f654958(0x90000000);
            r7 = r0;
            if (!CPU_FLAGS & E) {
                    r0 = loc_ffffffff8f672e54();
                    r6 = 0x8f70f7a5;
                    s0 = 0x1;
                    r1 = "backup_gpt";
                    r2 = 0x48;
                    *(r6 + 0x20) = 0x40;
                    *(r6 + 0x28) = 0x7f;
                    r4 = 0x0;
                    r3 = *(r6 + 0x30);
                    *(r6 + 0x21) = r4;
                    *(r6 + 0x30) = r3 | 0x4;
                    r3 = *(r6 + 0x31);
                    *(r6 + 0x22) = r4;
                    asm{ bfi        r3, sb, #0x0, #0x4 };
                    *(r6 + 0x23) = r4;
                    *(r6 + 0x31) = r3;
                    *(r6 + 0x24) = r4;
                    *(r6 + 0x25) = r4;
                    *(r6 + 0x26) = r4;
                    *(r6 + 0x27) = r4;
                    *(r6 + 0x29) = r4;
                    *(r6 + 0x2a) = r4;
                    *(r6 + 0x2b) = r4;
                    *(r6 + 0x2c) = r4;
                    *(r6 + 0x2d) = r4;
                    *(r6 + 0x2e) = r4;
                    *(r6 + 0x2f) = r4;
                    r10 = r0;
                    loc_ffffffff8f64ac90(r6 + 0x38, r1, r2, r3);
                    r0 = loc_ffffffff8f673264(r10, 0x90000000, 0x8000, s0);
                    COND = r7 == 0x0;
                    if (!COND) {
                            loc_ffffffff8f656968(r4, "Invalid primary GPT, validating backup GPT...\n");
                            loc_ffffffff8f64adc8(0x90000000, r4, 0x8000);
                            r1 = 0x90000000;
                            r0 = 0x8f70f7a5;
                            asm{ strd       r4, r5, [sp, #0x2c + var_2C] };
                            r0 = loc_ffffffff8f67ae2c(r0, r1, 0x0, 0x0);
                            COND = r4 != 0x0;
                            if ((!CPU_FLAGS & NE) && ((!CPU_FLAGS & NE) && (loc_ffffffff8f653bc8(0x8000, 0x90000000) == 0x0))) {
                                    r7 = 0x0;
                            }
                            else {
                                    loc_ffffffff8f656968();
                                    r7 = 0x0 ^ 0xffffffff;
                            }
                    }
                    else {
                            r3 = *(r5 + 0x20);
                            if ((r3)(r5, r10, 0x8f70f7a5, r3) != 0x0) {
                                    r6 = 0x8f70f7a5;
                                    r4 = loc_ffffffff8f6537f0(r6);
                                    r0 = loc_ffffffff8f6537f0(r10);
                                    r2 = r4;
                                    loc_ffffffff8f656968(0x1, "try to update backup partition %s for %s\n", r2, r0);
                                    asm{ strd       r4, r5, [sp, #0x2c + var_2C] };
                                    if (loc_ffffffff8f67b0d0(r6, 0x90000000, 0x0, 0x0) != 0x0) {
                                            loc_ffffffff8f656968();
                                    }
                                    else {
                                            r7 = 0x0;
                                    }
                            }
                            else {
                                    r7 = 0x0;
                            }
                    }
            }
            else {
                    loc_ffffffff8f656968();
            }
    }
    else {
            loc_ffffffff8f656968();
    }
    r0 = r7;
    if (stack[2040] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

