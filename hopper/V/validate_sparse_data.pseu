    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    stack[2040] = r0;
    stack[2041] = r4;
    stack[2042] = r5;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x18;
    r6 = r2;
    asm{ ldrd       r4, r5, [r2, #0x10] };
    r7 = r0;
    r8 = r1;
    r0 = 0x2;
    r1 = "Validating sparse data %p, type=0x%x, size=0x%llx, offset=0x%llx\n";
    stack[2039] = *r0;
    r3 = *r2;
    asm{ strd       r4, r5, [sp, #0x38 + var_38] };
    asm{ ldrd       r4, r5, [r2, #0x8] };
    asm{ strd       r4, r5, [sp, #0x38 + var_30] };
    loc_ffffffff8f656968(r0, r1, r2, r3, stack[2034], stack[2035], stack[2036], stack[2037], stack[2038], stack[2039], stack[2040], stack[2041], stack[2042]);
    r0 = *r6;
    if (r0 != 0x1) {
            if (!CPU_FLAGS & B) {
                    if (r0 != 0x2) {
                            r0 = 0x0;
                    }
                    else {
                            asm{ ldrd       r2, r3, [r6, #0x10] };
                            r10 = 0x8f7125ec;
                            asm{ strd       r2, r3, [sp, #0x38 + var_38] };
                            loc_ffffffff8f656968();
                            (*r8)(r8);
                            r3 = *r10;
                            asm{ ldrd       r4, r5, [r6, #0x10] };
                            if (loc_ffffffff8f62e458(r7) != 0x0) {
                                    loc_ffffffff8f656968();
                                    r0 = 0x0 ^ 0xffffffff;
                            }
                            else {
                                    r0 = 0x0;
                            }
                    }
            }
            else {
                    asm{ ldrd       r2, r3, [r6, #0x10] };
                    r0 = 0x2;
                    r1 = "validating raw data %p: size=0x%llx\n";
                    asm{ strd       r2, r3, [sp, #0x38 + var_38] };
                    loc_ffffffff8f656968(r0, r1, r6);
                    r8 = *(r6 + 0x1c);
                    asm{ ldrd       r4, r5, [r6, #0x10] };
                    r0 = loc_ffffffff8f674320();
                    if (r0 != 0x0) {
                            r0 = 0x1;
                    }
                    if (!CPU_FLAGS & NE) {
                            r0 = loc_ffffffff8f67436c(r7);
                    }
                    if (loc_ffffffff8f65abc4(r8) == 0x3) {
                            loc_ffffffff8f656968();
                            r0 = 0x0 ^ 0xffffffff;
                    }
                    else {
                            r0 = 0x0;
                    }
            }
    }
    else {
            asm{ ldrd       r2, r3, [r6, #0x10] };
            r0 = 0x2;
            r1 = "validating FILL data %p: size=0x%llx, val=0x%X\n";
            asm{ strd       r2, r3, [sp, #0x38 + var_38] };
            r3 = *(r6 + 0x1c);
            loc_ffffffff8f656968(r0, r1, r6, r3, stack[2034]);
            (*r8)(r8);
            r1 = *(r6 + 0x1c);
            asm{ ldrd       r2, r3, [r6, #0x10] };
            loc_ffffffff8f62e458(r7, r1) != 0x0;
            if (!CPU_FLAGS & E) {
                    loc_ffffffff8f656968();
                    r0 = 0x0 ^ 0xffffffff;
            }
            else {
                    r0 = 0x0;
            }
    }
    if (stack[2039] != *r0) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

