    stack[2042] = r4;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg0;
    r3 = *0x8f7112f4;
    stack[2041] = r3;
    r0 = loc_ffffffff8f6006b0(arg0, arg1, arg2, r3, arg0, stack[2041], stack[2042], r5, r6, 0x8f7112f4, r8, lr);
    COND = r5 != 0x0;
    if (!COND) {
            loc_ffffffff8f656968(0x4, "eMMC initialization failed!");
            r0 = 0x0 ^ 0xffffffff;
    }
    else {
            r6 = *(r5 + 0x50);
            r1 = 0x20000;
            asm{ stm        r4, {r1, r2, r3} };
            r3 = *(r5 + 0x40);
            r2 = *(r5 + 0x44);
            *(r4 + 0xc) = r1 >> r3 / 0x20000 | r2 * 0x8000;
            *(r4 + 0x10) = (r1 >> r3 / 0x20000 | r2 * 0x8000) >> r3 / 0x800 | r2 * 0x200000;
            *(r4 + 0x14) = r3 >> r3 / 0x200 | r2 * 0x800000;
            *(r4 + 0x2c) = loc_ffffffff8f6065ec(r5 + 0x30, r6, r2, r3 >> r3 / 0x200 | r2 * 0x800000);
            r0 = loc_ffffffff8f60668c(r5 + 0x30, r6);
            *(r4 + 0x38) = 0x8f60658c;
            *(r4 + 0x3c) = 0x8f606530;
            *(r4 + 0x40) = 0x8f6064d8;
            *(r4 + 0x44) = 0x8f6064a4;
            *(r4 + 0x48) = 0x8f606470;
            *(r4 + 0x30) = r0;
            *(r4 + 0x34) = *(r5 + 0x6c);
            *(r4 + 0x35) = *(r5 + 0x7c);
            *(r4 + 0x36) = *(r6 + 0xc0);
            *(r4 + 0x37) = *(r6 + 0xc4);
            r3 = *(r5 + 0x6c);
            if (r3 != 0x45) {
                    if (!CPU_FLAGS & A) {
                            if (r3 != 0x11) {
                                    if (!CPU_FLAGS & A) {
                                            if ((r3 != 0x2) && (r3 != 0x3)) {
                                                    loc_ffffffff8f64a9f0(0x8f6b7977, 0x10, 0x8f67d60f);
                                            }
                                            else {
                                                    loc_ffffffff8f64b108();
                                            }
                                    }
                                    else {
                                            if (((r3 != 0x15) && (r3 != 0x20)) && (r3 != 0x13)) {
                                                    loc_ffffffff8f64a9f0(0x8f6b7977, 0x10, 0x8f67d60f);
                                            }
                                            else {
                                                    loc_ffffffff8f64b108();
                                            }
                                    }
                            }
                            else {
                                    loc_ffffffff8f64b108();
                            }
                    }
                    else {
                            if (r3 != 0x89) {
                                    if (!CPU_FLAGS & A) {
                                            if ((r3 != 0x5e) && (r3 != 0x70)) {
                                                    loc_ffffffff8f64a9f0(0x8f6b7977, 0x10, 0x8f67d60f);
                                            }
                                            else {
                                                    loc_ffffffff8f64b108();
                                            }
                                    }
                                    else {
                                            if ((r3 != 0x9b) && (r3 != 0xfe)) {
                                                    if (r3 == 0x90) {
                                                            loc_ffffffff8f64b108();
                                                    }
                                                    else {
                                                            loc_ffffffff8f64a9f0(0x8f6b7977, 0x10, 0x8f67d60f);
                                                    }
                                            }
                                            else {
                                                    loc_ffffffff8f64b108();
                                            }
                                    }
                            }
                            else {
                                    loc_ffffffff8f64b108();
                            }
                    }
            }
            else {
                    loc_ffffffff8f64b108();
            }
            r0 = 0x0;
            *(r4 + 0x18) = 0x8f6b7977;
            asm{ ldrd       r2, r3, [r5, #0x40] };
            asm{ strd       r2, r3, [r4, #0x20] };
    }
    if (stack[2041] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

