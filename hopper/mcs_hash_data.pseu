    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    if (r0 != 0x0) {
            CMP(r1, 0x0);
    }
    r7 = r2;
    r4 = r0;
    r8 = r1;
    stack[2040] = *r0;
    if ((!CPU_FLAGS & E) && (*r0 == 0xd)) {
            r3 = *(r0 + 0x4);
            if ((r3 <= 0x3f) && (r2 <= -0xe0000001)) {
                    r2 = *(r0 + 0x5c);
                    if ((r2 <= -0xe0000001) && (r7 + r2 <= -0xe0000001)) {
                            if (r3 != 0x0) {
                                    if (r7 + r3 < 0x3f) {
                                            r6 = r7;
                                    }
                                    if (CPU_FLAGS & B) {
                                            r5 = 0x0;
                                    }
                                    if (!CPU_FLAGS & B) {
                                            r5 = 0x40 - r3;
                                            r6 = r7 - r5;
                                            loc_ffffffff8f667258(r3 + r0 + 0x8);
                                            r0 = loc_ffffffff8f669324(r4 + 0x8, r4 + 0x48, r4 + 0x48);
                                            if (r0 == 0x0) {
                                                    *(r4 + 0x4) = r0;
                                            }
                                    }
                                    else {
                                            r0 = r5;
                                    }
                            }
                            else {
                                    r6 = r7;
                                    r5 = r3;
                                    r0 = r5;
                            }
                            r10 = r4 + 0x48;
                            do {
                                    if (r6 < 0x3f) {
                                            r3 = 0x0;
                                    }
                                    if (CPU_FLAGS & A) {
                                            r3 = 0x1;
                                    }
                                    if (r0 != 0x0) {
                                            r3 = 0x0;
                                    }
                                    if (r3 == 0x0) {
                                        break;
                                    }
                                    r0 = r8 + r5;
                                    r5 = r5 + 0x40;
                                    r0 = loc_ffffffff8f669324(r0, r10, r10);
                                    r6 = r6 - 0x40;
                            } while (true);
                            if (r0 == 0x0) {
                                    if (r6 != 0x0) {
                                            r0 = *(r4 + 0x4);
                                            loc_ffffffff8f667258(0x8 + r4 + r0, r8 + r5, r6);
                                            *(r4 + 0x4) = *(r4 + 0x4) + r6;
                                    }
                                    r0 = 0x0;
                                    *(r4 + 0x5c) = *(r4 + 0x5c) + r7;
                            }
                    }
                    else {
                            r0 = 0x1;
                    }
            }
            else {
                    r0 = 0x1;
            }
    }
    else {
            r0 = 0x1;
    }
    if (stack[2040] != *r0) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

