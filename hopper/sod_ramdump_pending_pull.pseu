    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r3 = *0x8f7112f4;
    stack[2043] = r3;
    r4 = loc_ffffffff8f6359f4(arg0, arg1, arg2, r3, arg0, stack[2043], arg2, r4, 0x8f7112f4, lr);
    r0 = loc_ffffffff8f635424();
    if (r0 != 0x0) {
            r0 = 0x0;
    }
    if (!CPU_FLAGS & NE) {
            if (r4 != 0x0) {
                    r0 = *(r4 + 0x4);
            }
            if (CPU_FLAGS & NE) {
                    asm{ ubfxne     r0, r0, #0x4, #0x1 };
            }
    }
    if (stack[2043] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

