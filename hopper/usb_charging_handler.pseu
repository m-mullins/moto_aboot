    r3 = *0x8f7112f4;
    if (loc_ffffffff8f633128(arg0, arg1, arg2, r3, stack[2034]) != 0x0) {
            r0 = loc_ffffffff8f642504();
            r3 = r0 - 0x6;
            r7 = r0;
            r4 = 0x0 - r3;
            r4 = r4 + r3 + CARRY(FLAGS);
    }
    else {
            r7 = 0x6;
            if (loc_ffffffff8f633218() != 0x0) {
                    r4 = 0x2;
            }
            if (CPU_FLAGS & E) {
                    r4 = 0x0;
            }
    }
    r8 = 0xc80;
    r6 = 0x1;
    r11 = 0x8f6e07ec;
    goto loc_8f637ef8;

loc_8f637ef8:
    loc_ffffffff8f61ac4c(0x8f6e07cc);
    loc_ffffffff8f656968(0x1, "staring charging...\n");
    loc_ffffffff8f61b944(0x64);
    if (loc_ffffffff8f645744() != 0x0) goto loc_8f637f2c;

loc_8f637f20:
    loc_ffffffff8f656968();
    goto loc_8f63810c;

loc_8f63810c:
    *0x8f6e07c8 = 0x0;
    r0 = loc_ffffffff8f633128();
    COND = r3 == 0x0;
    if (!COND) {
            loc_ffffffff8f642128(0x0, 0x0);
    }
    else {
            r3 = r3;
            if (loc_ffffffff8f633218() != 0x0) {
                    loc_ffffffff8f641734(r3);
            }
    }
    loc_ffffffff8f646c0c(0x0);
    if (loc_ffffffff8f638cdc() != 0x0) {
            r3 = *(0x8f6ac374 + 0x18);
            (r3)("fastboot_screen", 0x80);
    }
    loc_ffffffff8f61ac84(0x8f6e07ac, 0x1);
    loc_ffffffff8f656968(0x1, "Charging stopped\n");
    goto loc_8f637ef8;

loc_8f637f2c:
    if (loc_ffffffff8f633128() != 0x0) {
            loc_ffffffff8f642128(0x1, r6);
            if (loc_ffffffff8f64658c() != 0x0) {
                    r4 = 0x2;
            }
            loc_ffffffff8f6423e8(r4);
            r0 = loc_ffffffff8f642478();
            if (r7 == 0x6) {
                    r3 = 0x8f69bd74;
            }
            if (CPU_FLAGS & E) {
                    r8 = *(r3 + r0 * 0x4);
            }
            if (CPU_FLAGS & NE) {
                    r8 = 0xc80;
            }
    }
    else {
            if (loc_ffffffff8f633218() != 0x0) {
                    loc_ffffffff8f641734(0x1);
                    if (loc_ffffffff8f64658c() != 0x0) {
                            r4 = 0x4;
                    }
                    loc_ffffffff8f6419a8(r4);
            }
    }
    loc_ffffffff8f646c0c(0x1);
    loc_ffffffff8f61c28c(0x8f6e080c, 0xea60, 0x8f637e38, 0x0);
    if (loc_ffffffff8f638cdc() != 0x0) {
            (*(0x8f6ac374 + 0x18))("fastboot_screen", 0x80);
    }
    goto loc_8f637fd8;

loc_8f637fd8:
    loc_ffffffff8f61ac4c(0x8f6e07ec);
    loc_ffffffff8f656968(0x2, "starting monitoring battery voltage...\n");
    if ((*(0x8f6e07ec + 0x8) & 0x40000000) == 0x0) goto loc_8f638028;

loc_8f637ff8:
    loc_ffffffff8f656968(0x1, "usb disconnected, stop charging\n");
    *(r11 + 0x8) = *(r11 + 0x8) & !0x40000000;
    if (*0x8f6e07c8 == 0x0) {
            loc_ffffffff8f61c324(0x8f6e080c);
    }
    goto loc_8f63810c;

loc_8f638028:
    if (loc_ffffffff8f645744() == 0x0) goto loc_8f637ff8;

loc_8f638034:
    r0 = loc_ffffffff8f624044();
    if ((r0 != 0x0) || (loc_ffffffff8f64689c(*r0) == 0x0)) goto loc_8f638094;

loc_8f638050:
    loc_ffffffff8f656968(0x1, "battery charged, disable charging\n");
    if (*0x8f6e07c8 == 0x0) {
            loc_ffffffff8f61c324(0x8f6e080c);
    }
    s0 = 0x4b1;
    while (loc_ffffffff8f624044() != 0x0) {
            s0 = s0 - 0x1;
            COND = s0 == 0x0;
            if (COND) {
                break;
            }
            loc_ffffffff8f61b944(0x3e8);
    }
    goto loc_8f63810c;

loc_8f638094:
    loc_ffffffff8f656968(0x2, "continue charging...\n");
    if (loc_ffffffff8f633128() != 0x0) {
            if (loc_ffffffff8f64689c(r8) != 0x0) {
                    r6 = 0x0;
            }
            loc_ffffffff8f642128();
    }
    else {
            if (loc_ffffffff8f633218() != 0x0) {
                    loc_ffffffff8f641734(0x1);
            }
    }
    if (*0x8f6e07c8 != 0x0) {
            loc_ffffffff8f61c28c(0x8f6e080c, 0xea60, 0x8f637e38, 0x0);
            *0x8f6e07c8 = 0x0;
    }
    goto loc_8f637fd8;

