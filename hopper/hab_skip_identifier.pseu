    r1 = arg1;
    r0 = arg0;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4;
    stack[2045] = *0x8f7112f4;
    r3 = *r1;
    r2 = r3 + 0x1;
    r12 = *(r0 + r3);
    if (r12 == 0x2) goto loc_8f66c9b0;

loc_8f66c97c:
    if (CPU_FLAGS & A) goto loc_8f66c9a0;

loc_8f66c980:
    if (r12 == 0x0) goto loc_8f66c9c4;

loc_8f66c988:
    if (r12 == 0x1) {
            r0 = r0 + r3;
    }
    if (CPU_FLAGS & E) {
            r3 = r3 + 0x4;
    }
    if (CPU_FLAGS & E) {
            r2 = *(r0 + 0x3);
    }
    if (CPU_FLAGS & E) goto loc_8f66c9b8;

loc_8f66c9cc:
    r0 = 0x33;
    goto loc_8f66c9d0;

loc_8f66c9d0:
    *r1 = r2;
    if (stack[2045] != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

loc_8f66c9b8:
    r2 = r3 + r2;
    goto loc_8f66c9c4;

loc_8f66c9c4:
    r0 = 0xf0;
    goto loc_8f66c9d0;

loc_8f66c9a0:
    if (r12 == 0xfe) goto loc_8f66c9c0;

loc_8f66c9a8:
    if (r12 != 0xff) goto loc_8f66c9cc;

loc_8f66c9b0:
    r2 = *(r0 + r2);
    r3 = r3 + 0x2;
    goto loc_8f66c9b8;

loc_8f66c9c0:
    r2 = r3 + 0x15;
    goto loc_8f66c9c4;

