    r1 = arg1;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r5 = arg0;
    r3 = *0x8f7112f4;
    r4 = *(0x8f6b8b0c + 0x4);
    stack[2041] = r3;
    goto loc_8f611e18;

loc_8f611e18:
    if (r4 == 0x8f6b8b0c) goto loc_8f611ef0;

loc_8f611e20:
    if ((r5 != *(r4 + 0x8)) || (r1 != *(r4 + 0xc))) goto loc_8f611e9c;

loc_8f611e38:
    r3 = 0x8f6ac0f0;
    r2 = *r3;
    r8 = r3;
    r2 = r2 + 0x1;
    *r3 = r2;
    if (r2 == 0x1) {
            loc_ffffffff8f619448();
    }
    asm{ ldm        r4, {r2, r3} };
    *r3 = r2;
    *(*r4 + 0x4) = r3;
    *r4 = 0x0;
    *(r4 + 0x4) = 0x0;
    r3 = *r8;
    *r8 = r3 - 0x1;
    if (r3 == 0x1) {
            loc_ffffffff8f619438();
    }
    loc_ffffffff8f64ab9c(r4);
    r3 = *(0x8f6b8b0c + 0x4);
    goto loc_8f611eb4;

loc_8f611eb4:
    if (r3 != 0x8f6b8b0c) goto loc_8f611ea4;

loc_8f611ebc:
    r5 = r5 + 0x3800 << (r5 + 0x3800) * 0x1000;
    r3 = *r5;
    if (r3 != 0x0) {
            r3 = 0x0;
    }
    if (CPU_FLAGS & NE) {
            *r5 = r3;
    }
    if (stack[2041] == *0x8f7112f4) {
            loc_ffffffff8f61951c();
    }
    else {
            loc_ffffffff8f648514();
    }
    return;

loc_8f611ea4:
    if (r5 == *(r3 + 0x8)) goto loc_8f611ef0;

loc_8f611eb0:
    r3 = *(r3 + 0x4);
    goto loc_8f611eb4;

loc_8f611ef0:
    if (stack[2041] != *0x8f7112f4) {
            loc_ffffffff8f648514();
    }
    return;

loc_8f611e9c:
    r4 = *(r4 + 0x4);
    goto loc_8f611e18;

