    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r4 = arg1;
    r2 = arg0;
    r3 = 0x8f6b8b04;
    if (*0x8f6b8afc >= 0x2000ffff) {
            r3 = 0x8f6b8b04;
            *r3 = *(*0x8f6b8b08 + (*(r2 + 0x3) | *(*0x8f6b8b08 + 0x2) * 0x100));
    }
    r3 = *r3;
    r3 = (r3 << r3 * 0x8000) + 0x2c00000;
    *(r3 + 0x4) = 0x0;
    r1 = *(r4 + 0x4);
    *r2 = 0x1;
    r0 = *(r2 + 0x4);
    r12 = *(r2 + 0x1);
    *(r2 + 0x5) = zero_extend_32(r1 - 0x1);
    *r3 = r0 << r0 * 0x10 | r12 * 0x4000000 | 0x8000000 | zero_extend_32(r1 - 0x1);
    do {
            r5 = *(r3 + 0x8);
    } while (r5 == 0x0);
    r5 = r5 ^ 0x1;
    COND = r5 == 0x0;
    if (!COND) {
            loc_ffffffff8f656968(0x0 ^ 0xffffffff, "SPMI read command failure: \t\t\tcmd_id = %u, error = %u\n", *r2, r5);
            r0 = r5;
    }
    else {
            r2 = *(r4 + 0x4);
            r0 = *r4;
            loc_ffffffff8f611988(r0, r5, r2, sp + 0x3);
            if (0x0 < *(r4 + 0x4)) {
                    r0 = *r4;
                    loc_ffffffff8f611988(r0, 0x1);
            }
            if (0x0 < *(r4 + 0x4)) {
                    r0 = *r4;
                    loc_ffffffff8f611988(r0, 0x2);
            }
            r0 = 0x0;
    }
    if (0x0 != *0x8f7112f4) {
            r0 = loc_ffffffff8f648514();
    }
    return r0;

