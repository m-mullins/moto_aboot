    r2 = arg2;
    r1 = arg1;
    r0 = arg0;
    stack[2039] = r0;
    stack[2041] = r4;
    stack[2042] = r5;
    stack[2043] = r6;
    stack[2044] = r7;
    stack[2045] = 0x8f6c0060;
    stack[2046] = 0x8f7112f4;
    stack[2047] = lr;
    sp = sp - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4 - 0x4;
    r5 = 0x8f6c0064;
    r6 = *0x8f6c0060;
    r3 = *0x8f7112f4;
    asm{ clz        r7, r6 };
    r7 = 0x1f - r7;
    stack[2040] = r3;
    r5 = r5 + r7 * 0x8;
    r4 = *r0;
    r0 = loc_ffffffff8f61b2a8(r5, r1, r2, r3, stack[2039], stack[2040], stack[2041], stack[2042], stack[2043], stack[2044], stack[2045], stack[2046], stack[2047]);
    r3 = *(r5 + 0x4);
    if (r0 != 0x0) {
            r1 = r0 - 0xc;
    }
    if (CPU_FLAGS & E) {
            r1 = r0;
    }
    if (r3 == r5) {
            r3 = 0x1;
    }
    if (CPU_FLAGS & E) {
            r6 = r6 & !    r3;
    r7;
;
    }
    if (CPU_FLAGS & E) {
            *0x8f6c0060 = r6;
    }
    *(r1 + 0x18) = 0x2;
    if (r1 != r4) {
            r3 = *(r1 + 0x20);
            *r0 = r1;
            if (r3 <= 0x0) {
                    r3 = 0x5;
            }
            if (CPU_FLAGS & LE) {
                    *(r1 + 0x20) = r3;
            }
            *(r4 + 0x1c) = *0x8f6ac0f0;
            *0x8f6ac0f0 = *(r1 + 0x1c);
            if (stack[2040] == *0x8f7112f4) {
                    r0 = r4;
                    sp = sp + 0xc;
                    sp = sp - 0x4 - 0x4 - 0x4 - 0x4;
                    if (*0x8f7112f4 != *0x8f7112f4) {
                            r0 = loc_ffffffff8f648514();
                    }
                    else {
                            r0 = r0 + 0x2c;
                            r1 = *(r1 + 0x2c);
                            sp = sp + 0xc;
                            r3 = sp - 0x2c;
                            r12 = lr;
                            asm{ stm        r3, {r4, r5, r6, r7, r8, sb, sl, fp, ip, sp, lr} ^ };
                            *r0 = r3;
                            asm{ clrex       };
                            asm{ ldm        r1, {r4, r5, r6, r7, r8, sb, sl, fp, ip, sp, lr} ^ };
                    }
            }
            else {
                    r0 = loc_ffffffff8f648514();
            }
    }
    else {
            if (stack[2040] != *0x8f7112f4) {
                    r0 = loc_ffffffff8f648514();
            }
    }
    return r0;

